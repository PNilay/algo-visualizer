{"version":3,"sources":["./src/app/algorithms/a-star.ts","./src/app/algorithms/Dijkstra.ts","./src/environments/environment.ts","./src/app/visualizer/gridcell/gridcell.component.ts","./src/app/visualizer/gridcell/gridcell.component.html","./src/app/visualizer/helper_components/color-representation/color-representation.component.ts","./src/app/visualizer/helper_components/color-representation/color-representation.component.html","./src/app/models/cell.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/algorithms/maze_and_pattern_Algorithms/random-patterns.ts","./src/app/models/navInfo.ts","./src/app/algorithms/maze_and_pattern_Algorithms/recursive-division-maze.ts","./src/app/algorithms/algo-helper.ts","./src/app/app.module.ts","./src/app/visualizer/gridworld/gridworld.component.ts","./src/app/visualizer/gridworld/gridworld.component.html","./src/app/visualizer/walkthrouh-tutorial/walkthrouh-tutorial.component.ts","./src/app/visualizer/walkthrouh-tutorial/walkthrouh-tutorial.component.html","./src/app/visualizer/nav-bar/nav-bar.component.ts","./src/app/visualizer/nav-bar/nav-bar.component.html","./src/app/algorithms/BFS.ts","./src/app/visualizer/algovisualizer/algovisualizer.component.ts","./src/app/visualizer/algovisualizer/algovisualizer.component.html","./src/app/algorithms/DFS.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Cell } from \"../models/cell\";\nimport { NavInfo } from \"../models/navInfo\";\nimport { AlgoHelper } from \"./algo-helper\";\n\nexport class Astar{\n    gridcells:Cell[][] = [];\n    visited:any[] = [];\n    navigation!:NavInfo;\n\n    isPathAvail:boolean = false;\n    \n    start_mid:number[] =[];\n    end_mid:number[] =[];\n\n    diagonal_weight:number = 1;\n    constructor(){ \n    }\n\n    // This Function assign h values to all cells\n    // Iinput to this function is the location of goal node\n    Manhattan_Distances(end:number[]){\n        for(var i=0; i<this.gridcells.length; i++){\n            for(var j=0; j<this.gridcells[0].length; j++){\n                this.gridcells[i][j].h = (1+1/10000000)*(Math.abs(i-end[0])+Math.abs(j-end[1]));\n            }\n        }\n    }\n\n\n    Manhattan_Distances_goal(end:number[]){\n        for(var i=0; i<this.gridcells.length; i++){\n            for(var j=0; j<this.gridcells[0].length; j++){\n                this.gridcells[i][j].h_goal = (1+1/10000000)*(Math.abs(i-end[0])+Math.abs(j-end[1]));\n            }\n        }\n    }\n\n    Euclidean_Distance_goal(end:number[]){\n        for(var i=0; i<this.gridcells.length; i++){\n            for(var j=0; j<this.gridcells[0].length; j++){\n                var dx = (i-end[0]);\n                var dy = (j-end[1]);\n                this.gridcells[i][j].h_goal = Math.sqrt((dx * dx) + (dy * dy));                \n            }\n        }\n    }\n\n\n    Euclidean_Distance(end:number[]){\n        for(var i=0; i<this.gridcells.length; i++){\n            for(var j=0; j<this.gridcells[0].length; j++){\n                var dx = (i-end[0]);\n                var dy = (j-end[1]);\n                this.gridcells[i][j].h = Math.sqrt((dx * dx) + (dy * dy));                \n            }\n        }\n    }\n\n    runAstar(cells:Cell[][], start:number[], end:number[], navinformation:NavInfo, diagonal_weight:number){\n        this.gridcells = cells;\n        this.navigation = navinformation;\n        this.diagonal_weight = diagonal_weight;\n\n        if(this.navigation.heuristics == 'euclidean'){\n            this.Euclidean_Distance(end);\n            this.Euclidean_Distance_goal(start);\n        }else{\n            this.Manhattan_Distances(end);\n            this.Manhattan_Distances_goal(start);\n        }\n        // this.Manhattan_Distances(end);\n        // this.Euclidean_Distance(end);\n        // this.isPathAvail = this.Astar_Path(start, end);\n\n        if(this.navigation.allowBidirection){\n            this.start_mid = [];\n            this.end_mid = [];\n\n            this.isPathAvail = this.Astar_Bidirection_Path(start, end);\n            this.gridcells = AlgoHelper.resetDiagonalWeights(this.gridcells);\n            \n        }else{            \n            this.isPathAvail = this.Astar_Path(start, end);\n            this.gridcells = AlgoHelper.resetDiagonalWeights(this.gridcells);\n        }\n\n    }\n\n\n    Astar_Path(start:number[], end:number[]){\n        this.visited = [];\n        let unvisited_neighbors = new Map()\n\n        unvisited_neighbors.set(start, 0+this.gridcells[start[0]][start[1]].h);\n        this.gridcells[start[0]][start[1]].g = 0;\n\n        while(unvisited_neighbors.size != 0){\n            var current = this.findMinDistanceNeighbor(unvisited_neighbors);\n\n            var current_pt =  Object.values(current[0]);\n\n            if(this.gridcells[current_pt[0]][current_pt[1]].status == 'end'){                \n                return true;\n            }\n\n            this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'current';\n           \n            if(this.navigation.allowDiagonals){\n                // var neighbors = AlgoHelper.findAllNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n\n                var neighbors = AlgoHelper.findAllNeighborsWithWeightedDiagonals(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length, this.gridcells, this.diagonal_weight);\n            }else{\n                var neighbors = AlgoHelper.findNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n            }\n\n            while(neighbors.length != 0){\n                var n = neighbors.shift();\n                if(n){\n                    // if(this.gridcells[n[0]][n[1]].vertex_status == 'unvisited' && this.gridcells[n[0]][n[1]].status != 'close'){\n                    if(this.gridcells[n[0]][n[1]].vertex_status != 'visited' && this.gridcells[n[0]][n[1]].status != 'close'){\n                        // Check if it thas been added to neighbor's list before or not\n                        if(this.gridcells[n[0]][n[1]].vertex_status == 'neighbors'){\n                            //It is already in the list, so check previous distance and compare it with new distance\n                            // If new distance is less, update it's previous node and distance                            \n                            if(this.gridcells[n[0]][n[1]].g > this.gridcells[current_pt[0]][current_pt[1]].g+ this.gridcells[n[0]][n[1]].weight ){\n                                this.gridcells[n[0]][n[1]].g = this.gridcells[current_pt[0]][current_pt[1]].g + this.gridcells[n[0]][n[1]].weight;\n                                unvisited_neighbors.set(n, this.gridcells[n[0]][n[1]].g+this.gridcells[n[0]][n[1]].h); \n                                this.gridcells[n[0]][n[1]].prev = current_pt; \n                            }\n\n                        }else{\n                            // Brand new neighbor which has never been visited before\n                            this.gridcells[n[0]][n[1]].vertex_status = 'neighbors';\n                            this.gridcells[n[0]][n[1]].g = this.gridcells[current_pt[0]][current_pt[1]].g + this.gridcells[n[0]][n[1]].weight;\n                            unvisited_neighbors.set(n, this.gridcells[n[0]][n[1]].g+this.gridcells[n[0]][n[1]].h); \n                            this.gridcells[n[0]][n[1]].prev = current_pt; \n                        }\n                    }\n                }\n            }\n\n            this.visited.push(current_pt);\n            this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited'; \n        }\n        return false;\n    }\n\n    // Find min distace neighbor node and remove it from map and return it\n    findMinDistanceNeighbor(unvisited_neighbors:Map<number[], number>){\n        const values = Array.from( unvisited_neighbors.values() );\n        const lowest = Math.min.apply(null, values);\n        const keys = Array.from( unvisited_neighbors.keys() );\n        const indexOfLowest = values.findIndex(function (x) { return x === lowest });\n        unvisited_neighbors.delete(keys[indexOfLowest]);\n        return [keys[indexOfLowest], lowest];\n    }\n\n\n    generatePath(start:number[], end:number[]){\n        if(this.navigation.allowBidirection){\n            return AlgoHelper.generateWeightedBidirectionPath(start, end, this.gridcells, this.start_mid, this.end_mid);\n        }else{\n            return AlgoHelper.generatePath(start, end, this.gridcells);\n        }\n    }\n\n\n    Astar_Bidirection_Path(start:number[], end:number[]){        \n        \n        this.visited = []\n\n        let unvisited_neighbors = new Map();\n        unvisited_neighbors.set(start, 0+this.gridcells[start[0]][start[1]].h);\n        this.gridcells[start[0]][start[1]].g = 0;\n\n\n        let unvisited_neighbors_goal = new Map();\n        unvisited_neighbors_goal.set(end, 0+this.gridcells[start[0]][start[1]].h_goal);\n        this.gridcells[end[0]][end[1]].g_goal = 0;\n\n\n        while(unvisited_neighbors.size != 0 && unvisited_neighbors_goal.size != 0){\n            \n            if(unvisited_neighbors.size != 0){\n                \n                var current = this.findMinDistanceNeighbor(unvisited_neighbors);\n\n                var current_pt =  Object.values(current[0]);\n\n                if(this.gridcells[current_pt[0]][current_pt[1]].status == 'end'){                \n                    return true;\n                }\n                this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'current';\n                if(this.navigation.allowDiagonals){\n\n                    // var neighbors = AlgoHelper.findAllNeighborsWithWeightedDiagonals(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length, this.gridcells, 0);\n                    var neighbors = AlgoHelper.findAllNeighborsWithWeightedDiagonals(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length, this.gridcells, this.diagonal_weight);\n\n                    // var neighbors = AlgoHelper.findAllNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n                }else{\n                    var neighbors = AlgoHelper.findNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n                }\n\n                while(neighbors.length != 0){                    \n                    var n = neighbors.shift();\n                    if(n){\n                        // if((this.gridcells[n[0]][n[1]].vertex_status == 'unvisited' || this.gridcells[n[0]][n[1]].vertex_status == 'visited_goal') && this.gridcells[n[0]][n[1]].status != 'close'){\n                        if(this.gridcells[n[0]][n[1]].vertex_status != 'visited_start' && this.gridcells[n[0]][n[1]].status != 'close'){\n                            // Check if it thas been added to neighbor's list before or not\n                            if(this.gridcells[n[0]][n[1]].vertex_status == 'neighbors'){\n                            //It is already in the list, so check previous distance and compare it with new distance\n                            // If new distance is less, update it's previous node and distance                            \n                            if(this.gridcells[n[0]][n[1]].g > this.gridcells[current_pt[0]][current_pt[1]].g+ this.gridcells[n[0]][n[1]].weight ){\n                                this.gridcells[n[0]][n[1]].g = this.gridcells[current_pt[0]][current_pt[1]].g + this.gridcells[n[0]][n[1]].weight;\n                                unvisited_neighbors.set(n, this.gridcells[n[0]][n[1]].g+this.gridcells[n[0]][n[1]].h);                                 \n                                this.gridcells[n[0]][n[1]].prev = current_pt; \n                            }\n    \n                            }else{\n                                // Brand new neighbor which has never been visited before\n                                if(this.gridcells[n[0]][n[1]].vertex_status == 'visited_goal'){\n                                    this.visited.push(current_pt);\n                                    this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_start';\n\n                                    this.start_mid = current_pt;                                    \n                                    this.end_mid = n;\n\n                                    if(this.gridcells[n[0]][n[1]].status != 'start' && this.gridcells[n[0]][n[1]].status != 'end'){\n                                        this.gridcells[n[0]][n[1]].status = 'mid';\n                                        this.gridcells[n[0]][n[1]].vertex_status='unvisited';\n                                    }\n                                    return true;\n                                }\n\n                                // Brand new neighbor which has never been visited before\n\n                                this.gridcells[n[0]][n[1]].vertex_status = 'neighbors';\n                                this.gridcells[n[0]][n[1]].g = this.gridcells[current_pt[0]][current_pt[1]].g + this.gridcells[n[0]][n[1]].weight;\n                                unvisited_neighbors.set(n, this.gridcells[n[0]][n[1]].g+this.gridcells[n[0]][n[1]].h); \n                                \n\n                                this.gridcells[n[0]][n[1]].prev = current_pt; \n                            }\n                        }                        \n                    } \n                } \n                this.visited.push(current_pt);\n                this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_start'; \n\n            }\n            // ======================================================================================================================\n\n            if(unvisited_neighbors_goal.size != 0){\n                var current = this.findMinDistanceNeighbor(unvisited_neighbors_goal);\n\n                var current_pt =  Object.values(current[0]);\n\n                if(this.gridcells[current_pt[0]][current_pt[1]].status == 'start'){                \n                    return true;\n                }\n\n                this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'current';\n                if(this.navigation.allowDiagonals){\n                    // var neighbors = AlgoHelper.findAllNeighborsWithWeightedDiagonals(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length, this.gridcells, 50);\n                    var neighbors = AlgoHelper.findAllNeighborsWithWeightedDiagonals(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length, this.gridcells, this.diagonal_weight);\n\n                    // var neighbors = AlgoHelper.findAllNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n                }else{\n                    var neighbors = AlgoHelper.findNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n                }\n\n\n                while(neighbors.length != 0){\n                    var n = neighbors.shift();\n                    if(n){\n                        // if((this.gridcells[n[0]][n[1]].vertex_status == 'unvisited' || this.gridcells[n[0]][n[1]].vertex_status == 'visited_start') && this.gridcells[n[0]][n[1]].status != 'close'){\n                            if(this.gridcells[n[0]][n[1]].vertex_status != 'visited_goal' && this.gridcells[n[0]][n[1]].status != 'close'){\n                            \n                            // Check if it thas been added to neighbor's list before or not\n                            if(this.gridcells[n[0]][n[1]].vertex_status == 'neighbors_end'){\n                                if(this.gridcells[n[0]][n[1]].g_goal > this.gridcells[current_pt[0]][current_pt[1]].g_goal+ this.gridcells[n[0]][n[1]].weight ){\n                                    this.gridcells[n[0]][n[1]].g_goal = this.gridcells[current_pt[0]][current_pt[1]].g_goal + this.gridcells[n[0]][n[1]].weight;\n                                    unvisited_neighbors_goal.set(n, this.gridcells[n[0]][n[1]].g_goal+this.gridcells[n[0]][n[1]].h_goal); \n\n                                    this.gridcells[n[0]][n[1]].prev_goal = current_pt; \n                                }\n    \n                            }else{\n                                if(this.gridcells[n[0]][n[1]].vertex_status == 'visited_start'){\n                                    this.visited.push(current_pt);\n                                    this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_goal';\n\n                                    this.start_mid = n;\n                                    this.end_mid = current_pt;\n\n                                    if(this.gridcells[n[0]][n[1]].status != 'start' && this.gridcells[n[0]][n[1]].status != 'end'){\n                                        this.gridcells[n[0]][n[1]].status = 'mid';\n                                        this.gridcells[n[0]][n[1]].vertex_status='unvisited';\n                                    }\n                                    return true;\n                                }\n\n                                // Brand new neighbor which has never been visited before\n                                this.gridcells[n[0]][n[1]].vertex_status = 'neighbors_end';\n                                this.gridcells[n[0]][n[1]].g_goal = this.gridcells[current_pt[0]][current_pt[1]].g_goal + this.gridcells[n[0]][n[1]].weight;\n                                unvisited_neighbors_goal.set(n, this.gridcells[n[0]][n[1]].g_goal+this.gridcells[n[0]][n[1]].h_goal); \n                                this.gridcells[n[0]][n[1]].prev_goal = current_pt; \n                            }\n                        }                        \n                    } \n                } \n\n                this.visited.push(current_pt);\n                this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_goal'; \n            }\n\n        }\n        \n        return false;\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n}","import { Cell } from \"../models/cell\";\nimport { NavInfo } from \"../models/navInfo\";\nimport { AlgoHelper } from \"./algo-helper\";\n\nexport class Dijksta{\n    gridcells:Cell[][] = [];\n    visited:any[] = [];\n    navigation!:NavInfo;\n    isPathAvail:boolean = false;\n    start_mid: number[] = [];\n    end_mid: number[] = [];\n\n    diagonal_weight:number = 1;\n    constructor(){ \n    }\n\n    setDistance(point:number[], val:number){\n        this.gridcells[point[0]][point[1]].dist = val;\n    }\n\n    // Find min distace neighbor node and remove it from map and return it\n    findMinDistanceNeighbor(unvisited_neighbors:Map<number[], number>){\n        const values = Array.from( unvisited_neighbors.values() );\n        const lowest = Math.min.apply(null, values);\n        const keys = Array.from( unvisited_neighbors.keys() );\n        const indexOfLowest = values.findIndex(function (x) { return x === lowest });\n        unvisited_neighbors.delete(keys[indexOfLowest]);\n        return [keys[indexOfLowest], lowest];\n    }\n\n    runDijksta(cells:Cell[][], start:number[], end:number[], navinformation:NavInfo, diagonal_weight:number){\n        this.gridcells = cells;\n        this.navigation = navinformation;\n        this.diagonal_weight =  diagonal_weight;\n\n        if(this.navigation.allowBidirection){\n            \n            this.start_mid = [];\n            this.end_mid = [];\n\n            this.isPathAvail = this.Dijksta_Bidirection_Path(start, end);\n            this.gridcells = AlgoHelper.resetDiagonalWeights(this.gridcells);\n        }else{\n            this.isPathAvail = this.Dijksta_Path(start, end);\n            this.gridcells = AlgoHelper.resetDiagonalWeights(this.gridcells);\n        }\n\n        // this.isPathAvail = this.Dijksta_Path(start, end);\n    }\n\n    Dijksta_Path(start:number[], end:number[]){\n        this.visited = []\n        let unvisited_neighbors = new Map()\n\n        unvisited_neighbors.set(start.toString(), 0);        \n        \n        while(unvisited_neighbors.size != 0){\n            var current = this.findMinDistanceNeighbor(unvisited_neighbors);\n\n            // var current_pt =  Object.values(current[0]);\n            var current_pt =  (current[0].toString()).split(',').map(Number);\n\n            \n            var current_val = Number(current[1]);\n\n            if(this.gridcells[current_pt[0]][current_pt[1]].status == 'end'){                                \n                return true;\n            }\n            this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'current';\n            if(this.navigation.allowDiagonals){\n                // var neighbors = AlgoHelper.findAllNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);                \n                var neighbors = AlgoHelper.findAllNeighborsWithWeightedDiagonals(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length, this.gridcells,  this.diagonal_weight);\n\n            }else{\n                var neighbors = AlgoHelper.findNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n            }\n\n\n            while(neighbors.length != 0){\n                var n = neighbors.shift();\n                if(n){\n                    if(this.gridcells[n[0]][n[1]].status != 'close'){\n                        \n                        // Check if it thas been added to neighbor's list before or not\n                        if(this.gridcells[n[0]][n[1]].vertex_status == 'neighbors'){                            \n                            //It is already in the list, so check previous distance and compare it with new distance\n                            // If new distance is less, update it's previous node and distance                       \n                            \n                            // let old_dist = Number(unvisited_neighbors.get(n));\n                            let old_dist = unvisited_neighbors.get(n.toString());\n\n                            if(current_val+this.gridcells[n[0]][n[1]].weight < old_dist){\n                                unvisited_neighbors.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight);                                \n                                this.gridcells[n[0]][n[1]].prev = current_pt; \n                            }\n\n                        }else if(this.gridcells[n[0]][n[1]].vertex_status == 'unvisited'){\n                            // Brand new neighbor which has never been visited before\n                            this.gridcells[n[0]][n[1]].vertex_status = 'neighbors';\n                            unvisited_neighbors.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight); \n                            this.gridcells[n[0]][n[1]].prev = current_pt; \n                        }\n                    }                        \n                } \n            } \n            \n            this.visited.push(current_pt);\n            this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited'; \n        }\n\n        return false;\n\n    }\n\n    // generatePath(start:number[], end:number[]){\n    //     // var path = [];\n\n    //     // var prev = this.gridcells[end[0]][end[1]].prev;\n    //     // while(!(prev[0]==start[0] && prev[1]==start[1])){\n    //     //     path.push(prev);\n    //     //     this.gridcells[prev[0]][prev[1]].vertex_status = 'path';\n    //     //     prev = this.gridcells[prev[0]][prev[1]].prev;\n    //     // }\n    //     // return path;\n\n\n    //     var path = [];\n\n    //     if(this.navigation.allowBidirection){            \n    //         var prev = this.start_mid;\n    //         while(!(prev[0]==start[0] && prev[1]==start[1])){\n    //             path.push(prev);\n    //             this.gridcells[prev[0]][prev[1]].vertex_status = 'path';\n    //             prev = this.gridcells[prev[0]][prev[1]].prev;\n    //         }\n\n    //         prev = this.end_mid;\n    //         while(!(prev[0]==end[0] && prev[1]==end[1])){\n    //             path.push(prev);\n    //             this.gridcells[prev[0]][prev[1]].vertex_status = 'path';\n    //             prev = this.gridcells[prev[0]][prev[1]].prev;\n    //         }\n    //     }else{\n    //         var prev = this.gridcells[end[0]][end[1]].prev;\n    //         while(!(prev[0]==start[0] && prev[1]==start[1])){\n    //             path.push(prev);\n    //             this.gridcells[prev[0]][prev[1]].vertex_status = 'path';\n    //             prev = this.gridcells[prev[0]][prev[1]].prev;\n    //         }\n    //     }\n    //     return path;\n    // }\n\n    generatePath(start:number[], end:number[]){\n        if(this.navigation.allowBidirection){\n            return AlgoHelper.generateWeightedBidirectionPath(start, end, this.gridcells, this.start_mid, this.end_mid);\n        }else{\n            return AlgoHelper.generatePath(start, end, this.gridcells);\n        }\n    }\n\n\n    Dijksta_Bidirection_Path(start:number[], end:number[]){\n        \n        this.visited = []\n\n        let unvisited_neighbors = new Map();\n        unvisited_neighbors.set(start.toString(), 0);\n\n        let unvisited_neighbors_goal = new Map();\n        unvisited_neighbors_goal.set(end.toString(), 0);\n\n        while(unvisited_neighbors.size != 0 && unvisited_neighbors_goal.size != 0){\n            \n            if(unvisited_neighbors.size != 0){\n                \n                var current = this.findMinDistanceNeighbor(unvisited_neighbors);\n\n                // var current_pt =  Object.values(current[0]);\n                var current_pt = (current[0].toString()).split(',').map(Number);\n                var current_val = Number(current[1]);\n\n                if(this.gridcells[current_pt[0]][current_pt[1]].status == 'end'){                \n                    return true;\n                }\n\n                if(this.gridcells[current_pt[0]][current_pt[1]].vertex_status == 'visited_goal'){\n                    this.visited.push(current_pt);\n                    this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_start'; \n\n                    this.start_mid = current_pt;\n                    this.end_mid = current_pt;\n\n                    if(this.gridcells[current_pt[0]][current_pt[1]].status != 'start' && this.gridcells[current_pt[0]][current_pt[1]].status != 'end'){\n                        this.gridcells[current_pt[0]][current_pt[1]].status = 'mid';\n                        this.gridcells[current_pt[0]][current_pt[1]].vertex_status='unvisited';\n                    }\n\n                    return true;\n                }\n\n\n\n                this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'current';\n\n                if(this.navigation.allowDiagonals){\n                    // var neighbors = AlgoHelper.findAllNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n                    var neighbors = AlgoHelper.findAllNeighborsWithWeightedDiagonals(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length, this.gridcells,  this.diagonal_weight);\n                }else{\n                    var neighbors = AlgoHelper.findNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n                }\n\n\n                while(neighbors.length != 0){                    \n                    var n = neighbors.shift();\n                    if(n){\n                        if((this.gridcells[n[0]][n[1]].vertex_status == 'neighbors' || this.gridcells[n[0]][n[1]].vertex_status == 'neighbors_end'  ||this.gridcells[n[0]][n[1]].vertex_status == 'unvisited' || this.gridcells[n[0]][n[1]].vertex_status == 'visited_goal') && this.gridcells[n[0]][n[1]].status != 'close'){\n                            // Check if it thas been added to neighbor's list before or not\n                            if(this.gridcells[n[0]][n[1]].vertex_status == 'neighbors'){\n                                //It is already in the list, so check previous distance and compare it with new distance\n                                // If new distance is less, update it's previous node and distance\n\n                                // let old_dist = Number(unvisited_neighbors.get(n));\n                                let old_dist = Number(unvisited_neighbors.get(n.toString()));\n\n                                if(current_val+this.gridcells[n[0]][n[1]].weight < old_dist){\n                                    unvisited_neighbors.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight);\n                                    this.gridcells[n[0]][n[1]].prev = current_pt; \n                                }\n    \n                            }else if(this.gridcells[n[0]][n[1]].vertex_status == 'visited_goal' || this.gridcells[n[0]][n[1]].vertex_status == 'neighbors_end'){\n                                // Brand new neighbor which has been visited before from goal and also might be visited from start\n                                if(unvisited_neighbors.has(n.toString())){\n                                    let old_dist = Number(unvisited_neighbors.get(n.toString()));\n\n                                    if(current_val+this.gridcells[n[0]][n[1]].weight < old_dist){\n                                        unvisited_neighbors.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight);\n                                        this.gridcells[n[0]][n[1]].prev = current_pt; \n                                    }\n                                }else{\n                                    unvisited_neighbors.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight); \n                                    this.gridcells[n[0]][n[1]].prev = current_pt; \n                                }\n\n                            }else{\n                                // Brand new neighbor which has never been visited before from either start or goal\n                                // if(this.gridcells[n[0]][n[1]].vertex_status == 'visited_goal'){\n                                //     this.visited.push(current_pt);\n                                //     this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_start'; \n\n                                //     this.start_mid = current_pt;\n                                //     this.end_mid = n;\n\n                                //     if(this.gridcells[n[0]][n[1]].status != 'start' && this.gridcells[n[0]][n[1]].status != 'end'){\n                                //         this.gridcells[n[0]][n[1]].status = 'mid';\n                                //         this.gridcells[n[0]][n[1]].vertex_status='unvisited';\n                                //     }\n\n                                //     return true;\n                                // }\n\n                                this.gridcells[n[0]][n[1]].vertex_status = 'neighbors';\n                                unvisited_neighbors.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight); \n                                this.gridcells[n[0]][n[1]].prev = current_pt; \n                            }\n                        }                        \n                    } \n                } \n\n                this.visited.push(current_pt);\n                this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_start'; \n            }\n            // ======================================================================================================================\n\n            if(unvisited_neighbors_goal.size != 0){\n                var current = this.findMinDistanceNeighbor(unvisited_neighbors_goal);\n\n                // var current_pt =  Object.values(current[0]);\n                var current_pt =  (current[0].toString()).split(',').map(Number);\n                var current_val = Number(current[1]);\n\n                if(this.gridcells[current_pt[0]][current_pt[1]].status == 'start'){                \n                    return true;\n                }\n\n                if(this.gridcells[current_pt[0]][current_pt[1]].vertex_status == 'visited_start'){\n                    this.visited.push(current_pt);\n                    this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_goal'; \n\n                    this.start_mid = current_pt;\n                    this.end_mid = current_pt;\n\n                    if(this.gridcells[current_pt[0]][current_pt[1]].status != 'start' && this.gridcells[current_pt[0]][current_pt[1]].status != 'end'){\n                        this.gridcells[current_pt[0]][current_pt[1]].status = 'mid';\n                        this.gridcells[current_pt[0]][current_pt[1]].vertex_status='unvisited';\n                    }\n\n                    return true;\n                    \n                }\n\n\n\n\n                this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'current';\n                if(this.navigation.allowDiagonals){\n\n                    var neighbors = AlgoHelper.findAllNeighborsWithWeightedDiagonals(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length, this.gridcells,  this.diagonal_weight);\n\n                    // var neighbors = AlgoHelper.findAllNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n                }else{\n                    var neighbors = AlgoHelper.findNeighbors(current_pt[0], current_pt[1],this.gridcells.length,this.gridcells[0].length);\n                }\n\n\n                while(neighbors.length != 0){\n                    var n = neighbors.shift();\n                    if(n){\n                        if((this.gridcells[n[0]][n[1]].vertex_status == 'neighbors_end' ||this.gridcells[n[0]][n[1]].vertex_status == 'neighbors'||this.gridcells[n[0]][n[1]].vertex_status == 'unvisited' || this.gridcells[n[0]][n[1]].vertex_status == 'visited_start') && this.gridcells[n[0]][n[1]].status != 'close'){\n                            \n                            // Check if it thas been added to neighbor's list before or not\n                            if(this.gridcells[n[0]][n[1]].vertex_status == 'neighbors_end'){\n                                //It is already in the list, so check previous distance and compare it with new distance\n                                // If new distance is less, update it's previous node and distance\n                                let old_dist = Number(unvisited_neighbors_goal.get(n.toString()));\n                                if(current_val+this.gridcells[n[0]][n[1]].weight < old_dist){\n                                    unvisited_neighbors_goal.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight);\n                                    this.gridcells[n[0]][n[1]].prev_goal = current_pt; \n                                }\n    \n                            }else if(this.gridcells[n[0]][n[1]].vertex_status == 'visited_start' || this.gridcells[n[0]][n[1]].vertex_status == 'neighbors' ){\n                                    // Brand new neighbor which has been visited before from goal and also might be visited from start\n                                    if(unvisited_neighbors_goal.has(n.toString())){\n                                        let old_dist = Number(unvisited_neighbors_goal.get(n.toString()));\n    \n                                        if(current_val+this.gridcells[n[0]][n[1]].weight < old_dist){\n                                            unvisited_neighbors_goal.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight);\n                                            this.gridcells[n[0]][n[1]].prev_goal = current_pt; \n                                        }\n                                    }else{\n                                        unvisited_neighbors_goal.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight);\n                                        this.gridcells[n[0]][n[1]].prev_goal = current_pt;  \n                                    }\n                            }else{\n                                // Brand new neighbor which has never been visited before\n                                // if(this.gridcells[n[0]][n[1]].vertex_status == 'visited_start'){\n                                //     this.visited.push(current_pt);\n                                //     this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_goal'; \n\n                                //     this.start_mid = n;\n                                //     this.end_mid = current_pt;\n\n                                //     if(this.gridcells[n[0]][n[1]].status != 'start' && this.gridcells[n[0]][n[1]].status != 'end'){\n                                //         this.gridcells[n[0]][n[1]].status = 'mid';\n                                //         this.gridcells[n[0]][n[1]].vertex_status='unvisited';\n                                //     }\n\n                                //     return true;\n                                    \n                                // }\n                                this.gridcells[n[0]][n[1]].vertex_status = 'neighbors_end';\n                                unvisited_neighbors_goal.set(n.toString(), current_val+this.gridcells[n[0]][n[1]].weight); \n                                this.gridcells[n[0]][n[1]].prev_goal = current_pt; \n                            }\n                        }                        \n                    } \n                } \n\n                this.visited.push(current_pt);\n                this.gridcells[current_pt[0]][current_pt[1]].vertex_status = 'visited_goal'; \n            }\n\n        }\n        \n        return false;\n\n    }\n\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { Cell } from '../../models/cell';\n\n@Component({\n  selector: 'app-gridcell',\n  templateUrl: './gridcell.component.html',\n  styleUrls: ['./gridcell.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GridcellComponent implements OnInit{\n\n  @Input('cell') cell!: Cell;\n  // @Input('toll_weight') toll_weight!: number;\n\n  bri:string = 'brightness(130%)';\n  isdraggable:boolean = false;\n  \n  constructor(private ref: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n\n    if(this.cell.status == \"start\" || this.cell.status == \"end\"){\n      this.isdraggable = true;      \n    }\n  }\n\n  runChangeDetector() {\n    this.ref.markForCheck();\n  }\n\n  reset(){\n    this.cell.vertex_status = 'unvisited';\n  }\n\n  removeMid(){\n    if(this.cell.status == 'mid'){\n      this.cell.status = 'open';\n    }\n  }\n  removeAllWall(){\n    if(this.cell.status == 'close'){\n      this.cell.status = 'open';\n    }\n  }\n\n  removeAllTolls(){\n    if(this.cell.status == 'toll'){\n      this.cell.status = 'open';\n      this.cell.weight = 1;\n    }\n  }\n\n  getFilterIntensity(){\n    if(this.cell.status == 'toll' && this.cell.vertex_status != 'path'){\n      var intensity  = 130 - (this.cell.weight);\n      return 'brightness('+intensity+'%)';\n      \n      // return \"brightness(\"+intensity+\"%)\";\n      // [style.background-color]=\"getFilterIntensity()\"\n    }\n    return 'brightness(130%)';\n  }\n\n}\n","<div [ngClass]=\"{\n    'start_cell': cell.status == 'start',\n    'end_cell': cell.status == 'end',\n    'close_cell':cell.status == 'close',\n    'path_cell': cell.vertex_status == 'path' && (cell.status == 'open' || cell.status == 'toll'),\n    'current_cell':cell.vertex_status == 'visited' && cell.status == 'open',\n    'toll_cell': cell.status == 'toll' && cell.vertex_status != 'path',\n    'visited_start': cell.vertex_status == 'visited_start' && cell.status == 'open',\n    'visited_goal': cell.vertex_status == 'visited_goal' && cell.status == 'open',\n    'middle': cell.status == 'mid'\n    }\"\n    \n    [ngStyle]=\"{'filter': (cell.status == 'toll' && cell.vertex_status != 'path') ? getFilterIntensity() : 'brightness(100%)' }\"\n\n>\n<!-- {{cell.prev}}, {{cell.prev_goal}} -->\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-color-representation',\n  templateUrl: './color-representation.component.html',\n  styleUrls: ['./color-representation.component.css']\n})\nexport class ColorRepresentationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main_color_rep\">\n    <div class=\"start_node\">\n        <div class=\"start\"></div>\n        <div class=\"statr_txt\">Start Node</div>\n\n        <div class=\"start\" style=\"margin-left: 80px;\"></div>\n        <div class=\"statr_txt\">Gole Node</div>\n    </div>\n\n\n    <div class=\"start_node\">\n        <div class=\"start\"></div>\n        <div class=\"statr_txt\">Blocked/Wall Node</div>\n\n        <div class=\"start\" style=\"margin-left: 20px;\"></div>\n        <div class=\"statr_txt\">Toll Node</div>\n    </div>\n\n\n    <div class=\"start_node\">\n        <div class=\"start\"></div>\n        <div class=\"statr_txt\">Unvisitd Node</div>\n\n        <div class=\"start\" style=\"margin-left: 55px;\"></div>\n        <div class=\"statr_txt\">Path Node</div>\n    </div>\n\n    <div class=\"start_node\">\n        <div class=\"start\"></div>\n        <div class=\"start\"></div>\n        <div class=\"start\"></div>\n        <div class=\"start\"></div>\n        <div class=\"statr_txt\">Visited Nodes</div>\n    </div>\n</div>\n","export class Cell{\n    status:'start'| 'end' | 'open' | 'close' | 'toll' | 'mid' = 'open';\n    vertex_status: 'visited' | 'unvisited' | 'exploring' | 'current' | 'neighbors'| 'neighbors_end'|'path' | 'visited_start' | 'visited_goal' = 'unvisited';\n    prev!:number[];\n    dist!:number;\n    weight:number = 1;\n\n    // Variable for A* algorithm\n    g!:number;\n    h!:number;\n    f!:number;\n\n    g_goal!:number;\n    h_goal!:number;\n    prev_goal!:number[];\n\n\n}","import { Component} from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  constructor(){ };\n\n  ngOnInit(): void { }\n}\n","<app-algovisualizer></app-algovisualizer>\n<!-- <app-node-handler></app-node-handler> -->","//searches all nodes through dfs\n//starts at p1's start node which is denoted by 'S'\n//30% chance of marking the visited node as blocked\n//visited statuses are kept under node.visitState where 'U' marks unvisited and 'V' marks visited\n//For now, X's denote blockages and O's denoted open spaces\n\nimport { Cell } from \"../../models/cell\";\n\nexport class Randompatterns{\n\n    static getRandom(){\n        var num=Math.random();\n        if(num < 0.3) return true;  //probability 0.3, create wall\n        else return false; // probability 0.7 leave empty\n    }\n\n    static generateRandomPattern(cells:Cell[][]) {\n        for (let y =0; y<cells.length; y++){\n          for(let x=0; x<cells[0].length; x++){\n              if(cells[y][x].status != 'start' && cells[y][x].status != 'end' ){\n                  if(Randompatterns.getRandom()){\n                    cells[y][x].status = 'close';\n                  }\n              }\n          }\n        }\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n","export class NavInfo{\n    algorithm:string = '';\n    algorithmSpeed!:number;\n    allowBidirection:boolean = false;\n    allowDiagonals:boolean = false;\n    heuristics:'manhattan'| 'euclidean' | 'octile' | 'chebyshev'  = 'manhattan';\n}","import { Cell } from \"src/app/models/cell\";\n\n\n// https://medium.com/analytics-vidhya/maze-generations-algorithms-and-visualizations-9f5e88a3ae37\nexport class RecursiveDivisionMaze {\n    gridcells:Cell[][] = [];\n\n    createBorder(cells:Cell[][]){\n\n    }\n\n    randomInteger(min:number, max:number) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n\n    // RecursiveDivision function divides the portion of blank canvas to create maze\n    // cells: it is an 2D array of gidworld's each cell\n    // start: it is a topmost point of the protion of gridworld\n    // end: bottom most point\n    // orientation: represent the orientataion of maze to created\n    //      -1: vertically oriented\n    //       0: mixed (vertically and horizontally)\n    //       1: Horizontally oriented\n    RecursiveDivision(cells:Cell[][], start:number[], end:number[], orientation:number, queue:number[][]){    \n        if(end[0]-start[0] < 2 || end[1]-start[1] < 2){\n            return;\n        }\n\n        // Horizontal recursive division maze ===============================================\n        if(orientation == 1){\n            var horizontal_index = this.randomInteger(start[0]+1, end[0]-1);\n\n            for(var i =start[1]; i<=end[1]; i++){\n                queue.push([horizontal_index, i]);\n            }\n\n            for(var i =0; i<=Math.round((end[1]-start[1])/10); i++){\n                var open_idx = this.randomInteger(start[1], end[1]);\n                queue.push([horizontal_index, open_idx]);\n            }\n\n            // var open_idx = this.randomInteger(start[1], end[1]);\n            // queue.push([horizontal_index, open_idx]);\n\n            // open_idx = this.randomInteger(start[1], end[1]);\n            // queue.push([horizontal_index, open_idx]);\n\n            this.RecursiveDivision(cells,start, [horizontal_index-1,end[1]], orientation,queue);\n            this.RecursiveDivision(cells, [horizontal_index+1, start[1]], end, orientation, queue);\n\n        }else if(orientation == -1){\n            // Verticle recursive division maze =============================================\n            var verticle_index = this.randomInteger(start[1]+1, end[1]-1);\n\n            for(var i =start[0]; i<=end[0]; i++){\n                queue.push([i, verticle_index]);\n            }\n\n            for(var i =0; i<=Math.round((end[0]-start[0])/10); i++){\n                var open_idx = this.randomInteger(start[0], end[0]);\n                queue.push([open_idx, verticle_index]);\n            }\n\n            // var open_idx = this.randomInteger(start[0], end[0]);\n            // queue.push([open_idx, verticle_index]);\n\n            this.RecursiveDivision(cells,start, [end[0], verticle_index-1], orientation, queue);\n            this.RecursiveDivision(cells, [start[0], verticle_index+1], end, orientation, queue);\n        }else{\n            // Mixed Horizontal and verticle division maze ==============================================\n\n            var horizontal_or_verticle = this.randomInteger(0, 1);\n            if(horizontal_or_verticle == 0){\n                // Horizontal division\n                var horizontal_index = this.randomInteger(start[0]+1, end[0]-1);\n\n                for(var i =start[1]; i<=end[1]; i++){\n                    queue.push([horizontal_index, i]);\n                }\n\n                for(var i =0; i<=Math.round((end[1]-start[1])/10); i++){\n                    var open_idx = this.randomInteger(start[1], end[1]);\n                    queue.push([horizontal_index, open_idx]);\n                }\n\n                // var open_idx = this.randomInteger(start[1], end[1]);\n                // // cells[horizontal_index][open_idx].status = \"open\";\n                // queue.push([horizontal_index, open_idx]);\n\n\n                // open_idx = this.randomInteger(start[1], end[1]);\n                // // cells[horizontal_index][open_idx].status = \"open\";\n                // queue.push([horizontal_index, open_idx]);\n\n                this.RecursiveDivision(cells,start, [horizontal_index-1,end[1]], orientation,queue);\n                this.RecursiveDivision(cells, [horizontal_index+1, start[1]], end, orientation, queue);\n            }else{\n                // verticle division\n                var verticle_index = this.randomInteger(start[1]+1, end[1]-1);\n\n                for(var i =start[0]; i<=end[0]; i++){\n                    // cells[i][verticle_index].status = \"close\";\n                    queue.push([i, verticle_index]);\n                }\n\n\n                for(var i =0; i<=Math.round((end[0]-start[0])/10); i++){\n                    var open_idx = this.randomInteger(start[0], end[0]);\n                    queue.push([open_idx, verticle_index]);\n                }\n                // var open_idx = this.randomInteger(start[0], end[0]);\n                // // cells[open_idx][verticle_index].status = \"open\";\n                // queue.push([open_idx, verticle_index]);\n\n                this.RecursiveDivision(cells,start, [end[0], verticle_index-1], orientation, queue);\n                this.RecursiveDivision(cells, [start[0], verticle_index+1], end, orientation, queue);\n            }\n        }\n    }\n}\n","import { Cell } from \"../models/cell\";\nimport { NavInfo } from \"../models/navInfo\";\n\nexport class AlgoHelper{\n\n    // This finction only allows left, right, top and bottom\n    static findNeighbors(x:number, y:number, width:number, height:number){\n        var neighbor = []      \n        if((x>0 && y > 0) && (x<width-1 && y <height-1)){\n                var leftX = (x - 1 + width) % width;\n                var rightX = (x + 1) % width;\n                var aboveY = (y - 1 + height) % height;\n                var belowY = (y + 1) % height;\n\n                // neighbor.push([rightX, y]);\n                // neighbor.push([leftX, y]);\n                // neighbor.push([x,aboveY]);\n                // neighbor.push([x,belowY]);\n\n\n                neighbor.push([x,aboveY]);\n                neighbor.push([rightX, y]);\n                neighbor.push([x,belowY]);\n                neighbor.push([leftX, y]);\n\n        }else{\n            if(x-1 >= 0){\n                var leftX = (x - 1 + width) % width;\n                neighbor.push([leftX, y]);\n            }\n            if(x+1< width){\n                var rightX = (x + 1) % width;\n                neighbor.push([rightX, y]);\n            }\n            if(y - 1 >= 0){\n                var aboveY = (y - 1 + height) % height;\n                neighbor.push([x,aboveY]);\n            }\n            if(y+1 < height){\n                var belowY = (y + 1) % height;\n                neighbor.push([x, belowY]);\n            }\n        }\n            return neighbor;\n        }\n    // find all neighbors allow diagonal\n    static findAllNeighbors(x:number, y:number, width:number, height:number){\n    var neighbor = []      \n    if((x>0 && y > 0) && (x<width-1 && y <height-1)){\n            var leftX = (x - 1 + width) % width;\n            var rightX = (x + 1) % width;\n            var aboveY = (y - 1 + height) % height;\n            var belowY = (y + 1) % height;\n\n\n            // neighbor.push([rightX, aboveY]);\n            // neighbor.push([rightX, belowY]);\n            // neighbor.push([leftX, belowY]);\n            // neighbor.push([leftX, aboveY]);\n\n            neighbor.push([x,aboveY]);\n            neighbor.push([rightX, y]);\n            neighbor.push([x,belowY]);\n            neighbor.push([leftX, y]);\n\n            neighbor.push([leftX, aboveY]);\n            neighbor.push([rightX, aboveY]);\n            neighbor.push([rightX, belowY]);\n            neighbor.push([leftX, belowY]);\n            // neighbor.push([leftX, aboveY]);\n\n\n    }else{\n        var l = false;\n        var r = false;\n        var t = false;\n        var b = false;\n\n\n        if(y - 1 >= 0){\n            var aboveY = (y - 1 + height) % height;\n            neighbor.push([x,aboveY]);\n            t = true;\n        }\n        if(x+1< width){\n            var rightX = (x + 1) % width;\n            neighbor.push([rightX, y]);\n            r = true;\n        }\n        if(y+1 < height){\n            var belowY = (y + 1) % height;\n            neighbor.push([x, belowY]);\n            b = true;\n        }\n        if(x-1 >= 0){\n            var leftX = (x - 1 + width) % width;\n            neighbor.push([leftX, y]);\n            l = true;\n        }\n\n\n        if(t){\n        var aboveY = (y - 1 + height) % height;\n            if(l){\n            var leftX = (x - 1 + width) % width;\n            neighbor.push([leftX, aboveY]);\n            }\n            if(r){\n            var rightX = (x + 1) % width;\n            neighbor.push([rightX, aboveY]);\n            }\n        }\n\n        if(b){\n        var belowY = (y + 1) % height;\n            if(r){\n            var rightX = (x + 1) % width;\n            neighbor.push([rightX, belowY]);\n            }\n            if(l){\n                var leftX = (x - 1 + width) % width;\n                neighbor.push([leftX, belowY]);\n            }\n        }\n\n    }\n        return neighbor;\n    }\n    // find all neighbors allow diagonal\n    static findAllNeighborsWithWeightedDiagonals(x:number, y:number, width:number, height:number, cells:Cell[][],  diagonalWeight:number){\n        var neighbor = []      \n        if((x>0 && y > 0) && (x<width-1 && y <height-1)){\n                var leftX = (x - 1 + width) % width;\n                var rightX = (x + 1) % width;\n                var aboveY = (y - 1 + height) % height;\n                var belowY = (y + 1) % height;\n    \n    \n                // neighbor.push([rightX, aboveY]);\n                // neighbor.push([rightX, belowY]);\n                // neighbor.push([leftX, belowY]);\n                // neighbor.push([leftX, aboveY]);\n    \n                neighbor.push([x,aboveY]);\n                if(cells[x][aboveY].status != 'toll'){\n                    cells[x][aboveY].weight = 1;\n                }\n                neighbor.push([rightX, y]);\n                if(cells[rightX][y].status != 'toll'){\n                    cells[rightX][y].weight = 1;\n                }\n                neighbor.push([x,belowY]);\n                if(cells[x][belowY].status != 'toll'){\n                    cells[x][belowY].weight = 1;\n                }\n\n                neighbor.push([leftX, y]);\n                if(cells[leftX][y].status != 'toll'){\n                    cells[leftX][y].weight = 1;\n                }\n\n\n\n\n\n\n                neighbor.push([leftX, aboveY]);\n                if(cells[leftX][aboveY].status != 'toll'){\n                    cells[leftX][aboveY].weight = diagonalWeight;\n                }\n\n                neighbor.push([rightX, aboveY]);\n                if(cells[rightX][aboveY].status != 'toll'){\n                    cells[rightX][aboveY].weight = diagonalWeight;\n                }\n\n                neighbor.push([rightX, belowY]);\n                if(cells[rightX][belowY].status != 'toll'){\n                    cells[rightX][belowY].weight = diagonalWeight;\n                }\n\n                neighbor.push([leftX, belowY]);\n                if(cells[leftX][belowY].status != 'toll'){\n                    cells[leftX][belowY].weight = diagonalWeight;\n                }\n    \n    \n        }else{\n            var l = false;\n            var r = false;\n            var t = false;\n            var b = false;\n    \n    \n            if(y - 1 >= 0){\n                var aboveY = (y - 1 + height) % height;\n                neighbor.push([x,aboveY]);\n                if(cells[x][aboveY].status != 'toll'){\n                    cells[x][aboveY].weight = 1;\n                }\n                t = true;\n            }\n            if(x+1< width){\n                var rightX = (x + 1) % width;\n                neighbor.push([rightX, y]);\n                if(cells[rightX][y].status != 'toll'){\n                    cells[rightX][y].weight = 1;\n                }\n                r = true;\n            }\n            if(y+1 < height){\n                var belowY = (y + 1) % height;\n                neighbor.push([x, belowY]);\n                if(cells[x][belowY].status != 'toll'){\n                    cells[x][belowY].weight = 1;\n                }\n                b = true;\n            }\n            if(x-1 >= 0){\n                var leftX = (x - 1 + width) % width;\n                neighbor.push([leftX, y]);\n                if(cells[leftX][y].status != 'toll'){\n                    cells[leftX][y].weight = 1;\n                }\n                l = true;\n            }\n    \n    \n            if(t){\n            var aboveY = (y - 1 + height) % height;\n                if(l){\n                    var leftX = (x - 1 + width) % width;\n                    neighbor.push([leftX, aboveY]);\n                    \n                    if(cells[leftX][aboveY].status != 'toll'){\n                        cells[leftX][aboveY].weight = diagonalWeight;\n                    }\n                }\n                if(r){\n                    var rightX = (x + 1) % width;\n                    neighbor.push([rightX, aboveY]);\n\n                    if(cells[rightX][aboveY].status != 'toll'){\n                        cells[rightX][aboveY].weight = diagonalWeight;\n                    }\n                }\n            }\n    \n            if(b){\n            var belowY = (y + 1) % height;\n                if(r){\n                    var rightX = (x + 1) % width;\n                    neighbor.push([rightX, belowY]);\n\n                    if(cells[rightX][belowY].status != 'toll'){\n                        cells[rightX][belowY].weight = diagonalWeight;\n                    }\n                }\n                if(l){\n                    var leftX = (x - 1 + width) % width;\n                    neighbor.push([leftX, belowY]);\n\n                    if(cells[leftX][belowY].status != 'toll'){\n                        cells[leftX][belowY].weight = diagonalWeight;\n                    }\n                }\n            }\n    \n        }\n            return neighbor;\n    }\n\n    static resetDiagonalWeights(cells:Cell[][]){\n        for(var i=0; i<cells.length; i++){\n            for(var j=0; j<cells[0].length; j++){\n                if(cells[i][j].status != 'toll'){\n                    cells[i][j].weight = 1;\n                }\n            }\n        }\n        return cells;\n    }\n\n    static generateWeightedBidirectionPath(start:number[], end:number[], cells:Cell[][], start_mid:number[], end_mid:number[]){\n        var path = [];\n          \n        var prev = start_mid;\n        while(!(prev[0]==start[0] && prev[1]==start[1])){\n            path.push(prev);\n            cells[prev[0]][prev[1]].vertex_status = 'path';\n            prev = cells[prev[0]][prev[1]].prev;\n        }\n\n        prev = end_mid;\n        while(!(prev[0]==end[0] && prev[1]==end[1])){\n            path.push(prev);\n            cells[prev[0]][prev[1]].vertex_status = 'path';\n            prev = cells[prev[0]][prev[1]].prev_goal;\n        }\n        return path;\n    }\n\n    static generateBidirectionPath(start:number[], end:number[], cells:Cell[][], start_mid:number[], end_mid:number[]){\n        var path = [];\n          \n        var prev = start_mid;\n        while(!(prev[0]==start[0] && prev[1]==start[1])){\n            path.push(prev);\n            cells[prev[0]][prev[1]].vertex_status = 'path';\n            prev = cells[prev[0]][prev[1]].prev;\n        }\n\n        prev = end_mid;\n        while(!(prev[0]==end[0] && prev[1]==end[1])){\n            path.push(prev);\n            cells[prev[0]][prev[1]].vertex_status = 'path';\n            prev = cells[prev[0]][prev[1]].prev;\n        }\n        return path;\n    }\n    static generatePath(start:number[], end:number[], cells:Cell[][]){\n        var path = [];\n\n        var prev = cells[end[0]][end[1]].prev;\n        while(!(prev[0]==start[0] && prev[1]==start[1])){\n            path.push(prev);\n            cells[prev[0]][prev[1]].vertex_status = 'path';\n            prev = cells[prev[0]][prev[1]].prev;\n        }\n        return path;\n    }\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GridworldComponent } from './visualizer/gridworld/gridworld.component';\nimport { NavBarComponent } from './visualizer/nav-bar/nav-bar.component';\nimport { GridcellComponent } from './visualizer/gridcell/gridcell.component';\nimport { AlgovisualizerComponent } from './visualizer/algovisualizer/algovisualizer.component';\nimport { FormsModule } from '@angular/forms';\nimport { SimpleNotificationsModule } from \"angular2-notifications\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ColorRepresentationComponent } from './visualizer/helper_components/color-representation/color-representation.component';\nimport { WalkthrouhTutorialComponent } from './visualizer//walkthrouh-tutorial/walkthrouh-tutorial.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GridworldComponent,\n    NavBarComponent,\n    GridcellComponent,\n    AlgovisualizerComponent,\n    ColorRepresentationComponent,\n    WalkthrouhTutorialComponent\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    SimpleNotificationsModule.forRoot(),\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ThrowStmt } from '@angular/compiler';\nimport { ChangeDetectorRef, Component, EventEmitter, HostListener, Input, OnInit, Output, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\nimport { Randompatterns } from 'src/app/algorithms/maze_and_pattern_Algorithms/random-patterns';\nimport { RecursiveDivisionMaze } from 'src/app/algorithms/maze_and_pattern_Algorithms/recursive-division-maze';\nimport { Cell } from '../../models/cell';\nimport { GridcellComponent } from '../gridcell/gridcell.component';\n// import { CellComponent } from '../cell/cell.component';\n\n@Component({\n  selector: 'app-gridworld',\n  templateUrl: './gridworld.component.html',\n  styleUrls: ['./gridworld.component.css'],\n  host: {\n    '(window:resize)': 'onResize($event)'\n  }\n})\nexport class GridworldComponent implements OnInit {\n\n  @Input() inProcess:boolean = false;\n  @Input() cells:Cell[][] = [];\n  @Input() toll!:number;\n  @Input() is_touch_toll:boolean = false;\n\n  @Output() iswallClicked: EventEmitter<boolean> = new EventEmitter();\n  @Output() dragged: EventEmitter<any> = new EventEmitter();\n\n  @ViewChildren('cell') cellcomponents!: QueryList<any>;\n\n  mousePressed:boolean = false;\n  leftOrRight:boolean = false; //left button clicked == false, right button ==> true\n  prev_mouseEnter!:number;\n\n  dragNode!:number[];\n  dragType!:boolean; //True == Start, False == End\n\n  drag_touch:boolean = false;\n\n  // window_width:number = window.innerWidth;\n\n\n  screenWidth!:number;\n  cell_width:number = 10;\n\n  mobile_device:boolean = false;\n\n  constructor(private ref: ChangeDetectorRef) { }\n\n  ngOnInit(): void{ \n    if(window.innerWidth < 450){\n      this.cell_width = 2 *(85/this.cells[0].length);\n    }else{\n      this.cell_width = 85/this.cells[0].length;\n    }    \n  };\n\n\n\n  onResize(event:any) {\n    this.screenWidth = event.target.screen.availWidth;\n    this.grid_sizeChange();\n    // console.log(\"cell width: \", this.cell_width , this.cells[0].length, this.screenWidth);\n  };\n\n  grid_sizeChange(){\n    if(this.screenWidth < 450){\n      this.cell_width = 2 *(85/this.cells[0].length);\n    }else{\n      this.cell_width = 85/this.cells[0].length;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.grid_sizeChange(); \n    console.log(\"on change --------------------->\", this.is_touch_toll);\n       \n  }\n\n  refreshGridworld(){\n    this.cellcomponents.forEach((cmp: GridcellComponent) => {\n        cmp.runChangeDetector();\n    });\n  }\n\n  addColors(){\n    this.cellcomponents.forEach((cmp: GridcellComponent) => {\n      setTimeout(() => {\n        cmp.runChangeDetector();\n      }, 100);\n    });\n  }\n\n  tdClick(y:number,x:number){    \n    if(this.cells[y][x].status == 'open'){\n      this.cells[y][x].status = 'close';\n    }else if(this.cells[y][x].status == 'close'){\n      this.cells[y][x].status = 'open';\n    }\n    this.refreshGridworld();\n  }\n\n  onRightClick(){\n    return false;\n  }\n  mouseEnterHandler(y:number,x:number){        \n    if(this.mousePressed &&  !this.inProcess){\n      if(this.prev_mouseEnter != y+x){ \n        if(this.leftOrRight){          \n          //right button pressed\n          if(this.cells[y][x].status == 'open' || this.cells[y][x].status == 'close'){             \n            this.cells[y][x].status = 'toll';\n            // this.cells[y][x].weight = 10;\n            this.cells[y][x].weight = this.toll;\n            this.prev_mouseEnter = y+x;\n            this.refreshGridworld();\n            return;\n          }else if(this.cells[y][x].status == 'toll'){    \n            this.cells[y][x].status = 'open';\n            this.cells[y][x].weight = 1;\n            this.prev_mouseEnter = y+x;\n            this.refreshGridworld();\n            return;\n          }\n        }else{\n          if(this.cells[y][x].status == 'open' || this.cells[y][x].status == 'toll'){ \n            this.cells[y][x].status = 'close';\n            this.cells[y][x].weight = 1;\n            this.prev_mouseEnter = y+x;\n            this.refreshGridworld();\n            return;\n          }else if(this.cells[y][x].status == 'close'){    \n            this.cells[y][x].status = 'open';\n            this.prev_mouseEnter = y+x;\n            this.refreshGridworld();\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  // Left button --> Create wall\n  // right button --> Create toll\n  mouseDownHandler(event:any, y:number,x:number){\n\n    // console.log(\"this clidfghjkjhghgfg\", this.is_touch_toll);\n    \n    if(!this.inProcess){\n      if(this.cells[y][x].status != 'start' && this.cells[y][x].status != 'end' ){\n        this.prev_mouseEnter = y+x;\n\n        if((event.button == 0 && !this.is_touch_toll)||(event.button == 2 && this.is_touch_toll)){\n          // console.log('Left Clicked');\n          this.leftOrRight = false;\n          if(this.cells[y][x].status == 'close'){\n            this.cells[y][x].status = 'open';\n          }\n          else if(this.cells[y][x].status == 'open' || this.cells[y][x].status == 'toll'){\n            this.cells[y][x].weight = 1;\n            this.cells[y][x].status = 'close';\n          }\n        }else{\n          // console.log(\"Right Click\");\n          this.leftOrRight = true;\n          if(this.cells[y][x].status == 'toll'){\n            this.cells[y][x].weight = 1;\n            this.cells[y][x].status = 'open';\n          }\n          else{\n\n            // console.log(\"Toll : \", this.toll);\n            // this.generateRandomPatterns();\n            this.cells[y][x].status = 'toll';\n            // this.cells[y][x].weight = 10;\n            this.cells[y][x].weight = this.toll;\n          }\n        }\n        this.mousePressed = true;        \n        this.refreshGridworld();\n\n      }\n    }\n    \n  }\n\n  mouseUpHandler(){   \n    this.mousePressed = false;\n    this.leftOrRight = false;\n    this.drag_touch = false;\n    this.iswallClicked.emit(true);\n  }\n\n  resetGridworld(){\n    this.cellcomponents.forEach((cmp: GridcellComponent) => {\n        cmp.reset();\n        cmp.removeMid();\n        cmp.runChangeDetector();\n    });\n  }\n\n  clearGridWorld(){\n    this.cellcomponents.forEach((cmp: GridcellComponent) => {\n      cmp.reset();\n      cmp.removeMid();\n      cmp.removeAllWall();\n      cmp.removeAllTolls();\n      cmp.runChangeDetector();\n  });\n  }\n\n\n  DragStart(event:any,y:number,x:number) {    \n    if(this.cells[y][x].status != 'start' &&  this.cells[y][x].status != 'end'){\n      event.preventDefault();\n    }else{\n      this.dragNode = [y,x];\n      this.dragType = this.cells[y][x].status == 'start';\n      // console.log(\"Drag Start at : \",y,x);\n      \n    }\n  }\n\n  dropEnd(event:any){\n    event.preventDefault();\n  }\n\n  MouseUp(event:any, y:number, x:number){    \n    this.mousePressed = false;\n\n    if(this.cells[y][x].status !!= 'end' && this.cells[y][x].status !!= 'start'){\n      if(this.dragType){\n        this.cells[this.dragNode[0]][this.dragNode[1]].status = 'open';\n        this.cells[y][x].status = 'start';\n        this.dragged.emit([true,y,x]);\n      }else{\n        this.cells[this.dragNode[0]][this.dragNode[1]].status = 'open';\n        this.cells[y][x].status = 'end';\n        this.dragged.emit([false,y,x])\n      }\n      event.preventDefault();\n  }\n  }\n\n  DragCancel(event: DragEvent , y:number, x:number) {\n    // console.log(\"event-- \", event);\n    // console.log(\"eelement frorm point,\",document.elementFromPoint(event.clientX, event.clientY)?.parentElement);\n    \n    if(this.dragNode[0] != y && this.dragNode[1] != x){\n      // console.log(\"drag cancel\", x,y, this.dragNode, this.dragType);\n      if(this.cells[y][x].status == 'start' ||  this.cells[y][x].status == 'end'){\n        event.preventDefault();\n      }else{\n        if(this.dragType){\n          this.cells[this.dragNode[0]][this.dragNode[1]].status = 'open';\n          this.cells[y][x].status = 'start';\n          this.dragNode = [y,x];\n          this.dragType = true;\n          this.dragged.emit([true,y,x]);\n        }else{\n          this.cells[this.dragNode[0]][this.dragNode[1]].status = 'open';\n          this.cells[y][x].status = 'end';\n          this.dragNode = [y,x];\n          this.dragType = false;\n          this.dragged.emit([false,y,x])\n        }\n      }\n    }\n    event.preventDefault();\n  }\n\n\n  createWall(index:number[]){    \n    if(this.cells[index[0]][index[1]].status != 'start' &&  this.cells[index[0]][index[1]].status != 'end'){\n      if(this.cells[index[0]][index[1]].status == 'open'){\n        this.cells[index[0]][index[1]].status = 'close';\n      }else{\n        this.cells[index[0]][index[1]].status = 'open';\n      }\n    }\n  }\n\n  delay(value:number[]) {\n    setTimeout(() => {\n      this.createWall(value);\n      this.cellcomponents.forEach((cmp: GridcellComponent) => {\n        if (cmp.cell == this.cells[value[0]][value[1]]) {                    \n            cmp.runChangeDetector();            \n        }\n      });\n    }, 1000);\n  }\n\n\n  generateRandomPatterns(){\n    Randompatterns.generateRandomPattern(this.cells);\n  }\n\n  generateRecursiveDivisionMaze(orientation:number){\n    var queue: number[][] = [];\n    var rd = new RecursiveDivisionMaze();\n    rd.RecursiveDivision(this.cells, [0,0], [this.cells.length-1,this.cells[0].length-1], orientation, queue);\n    for(var i =0;i<queue.length; i++){\n      var value = queue[i];\n      if(value){\n        this.delay(value);\n      }\n    }\n  }\n\n\n  touchStart(event:any, y:number,x:number){\n    if(!this.inProcess){\n      if(this.cells[y][x].status != 'start' && this.cells[y][x].status != 'end' ){\n        this.prev_mouseEnter = y+x;\n      \n\n        if(this.is_touch_toll){\n          this.leftOrRight = true;\n          if(this.cells[y][x].status == 'toll'){\n            this.cells[y][x].status = 'open';\n          }\n          else if(this.cells[y][x].status == 'open' || this.cells[y][x].status == 'close'){\n            this.cells[y][x].weight = this.toll;\n            this.cells[y][x].status = 'toll';\n          }\n\n        }else{\n          this.leftOrRight = false;\n          if(this.cells[y][x].status == 'close'){\n            this.cells[y][x].status = 'open';\n          }\n          else if(this.cells[y][x].status == 'open' || this.cells[y][x].status == 'toll'){\n            this.cells[y][x].weight = 1;\n            this.cells[y][x].status = 'close';\n          }\n        }\n          \n        this.mousePressed = true;        \n        this.refreshGridworld();\n\n      }else{\n        // drag start on touch\n        this.dragNode = [y,x];\n        this.dragType = this.cells[y][x].status == 'start';\n        this.drag_touch = true;\n        // console.log(\"Drag Start at : \",y,x);\n      }\n    }\n  }\n\n\n  touchEnd(event:any, y:number,x:number){\n    // console.log(\"touch end::  \", y,x);\n    // console.log(\"touch end\", event);\n\n    if(this.drag_touch){\n      var myLocation = event.changedTouches[0];\n      var x_and_y = document.elementFromPoint(myLocation.clientX, myLocation.clientY)?.parentElement?.id;\n  \n      if(x_and_y != '' && x_and_y != undefined){\n        var arr = x_and_y.split(',')\n        y = parseInt(arr[0]);\n        x = parseInt(arr[1]);\n        this.dragTouchMouseUp(y, x);\n      }\n      this.mouseUpHandler();\n    }else{\n      this.mouseUpHandler();\n    }\n\n    if (event.cancelable) {\n      event.preventDefault();\n   }\n\n    // event.preventDefault();\n  }\n\n  touchCancel(event:any, y:number,x:number){\n    // console.log(\"touch cancel::  \", y,x);\n    // console.log(\"touch cancel\", event);\n\n    event.preventDefault();\n  }\n  touchMove(event:any, y_in:number,x_in:number){\n    // console.log(\"touch move::  \", y_in,x_in);\n    // console.log(\"touch move\", event);\n\n    var myLocation = event.changedTouches[0];\n    // console.log(\"my location \", myLocation);\n    // console.log(\"my location \", myLocation.clientX);\n\n    // console.log(\"elment from move \",document.elementFromPoint(myLocation.clientX, myLocation.clientY)?.parentElement?.id);\n\n    var x_and_y = document.elementFromPoint(myLocation.clientX, myLocation.clientY)?.parentElement?.id;\n\n    if(x_and_y != '' && x_and_y != undefined){\n      var arr = x_and_y.split(',')\n      var y = parseInt(arr[0]);\n      var x = parseInt(arr[1]);\n\n      // console.log(\"x and y \", y, x);\n\n      if(this.drag_touch){\n        this.dragTouchMove(y,x);\n      }else{\n        if(this.mousePressed &&  !this.inProcess){\n          // console.log(\"mouse pressed and not tin prrcess\", x_and_y);\n\n          // console.log(x_and_y.split(','));\n          // var arr = x_and_y.split(',')\n          // var y = parseInt(arr[0]);\n          // var x = parseInt(arr[1]);\n\n          // console.log(\"x and y \", y, x);\n          \n          \n          if(this.prev_mouseEnter != y+x){ \n\n            if(this.is_touch_toll){\n              if(this.cells[y][x].status == 'open' || this.cells[y][x].status == 'close'){ \n                this.cells[y][x].status = 'toll';\n                this.cells[y][x].weight = this.toll;\n                this.prev_mouseEnter = y+x;\n                this.refreshGridworld();\n                return;\n              }else if(this.cells[y][x].status == 'toll'){    \n                this.cells[y][x].status = 'open';\n                this.prev_mouseEnter = y+x;\n                this.refreshGridworld();\n                return;\n              }\n\n            }else{\n              if(this.cells[y][x].status == 'open' || this.cells[y][x].status == 'toll'){ \n                this.cells[y][x].status = 'close';\n                this.cells[y][x].weight = 1;\n                this.prev_mouseEnter = y+x;\n                this.refreshGridworld();\n                return;\n              }else if(this.cells[y][x].status == 'close'){    \n                this.cells[y][x].status = 'open';\n                this.prev_mouseEnter = y+x;\n                this.refreshGridworld();\n                return;\n              }\n            }\n\n\n          }\n        }\n      }\n\n    }\n  }\n\n\n\n\n  dragTouchMove(y:number, x:number) {\n    if(this.dragNode[0] != y && this.dragNode[1] != x){\n      if(this.cells[y][x].status != 'start' ||  this.cells[y][x].status != 'end'){\n        if(this.dragType){\n          this.cells[this.dragNode[0]][this.dragNode[1]].status = 'open';\n          this.cells[y][x].status = 'start';\n          this.dragNode = [y,x];\n          this.dragType = true;\n          this.dragged.emit([true,y,x]);\n        }else{\n          this.cells[this.dragNode[0]][this.dragNode[1]].status = 'open';\n          this.cells[y][x].status = 'end';\n          this.dragNode = [y,x];\n          this.dragType = false;\n          this.dragged.emit([false,y,x])\n        }\n      }\n    }\n  }\n\n  dragTouchMouseUp(y:number, x:number){    \n    this.mousePressed = false;\n    this.drag_touch = false;\n\n    if(this.cells[y][x].status != 'end' && this.cells[y][x].status != 'start'){\n      if(this.dragType){\n        this.cells[this.dragNode[0]][this.dragNode[1]].status = 'open';\n        this.cells[y][x].status = 'start';\n        this.dragged.emit([true,y,x]);\n      }else{\n        this.cells[this.dragNode[0]][this.dragNode[1]].status = 'open';\n        this.cells[y][x].status = 'end';\n        this.dragged.emit([false,y,x])\n      }\n    }\n  }\n\n  }\n\n\n","<div class=\"grid\">\n    \n    <table>\n        <tr *ngFor=\"let row of cells; index as y\">\n            <td *ngFor=\"let col of row; index as x\" \n            (contextmenu)=\"onRightClick()\"\n            (mousedown)=\"mouseDownHandler($event,y,x)\" \n            (mouseenter)=\"mouseEnterHandler(y,x)\"\n            (mouseup)=\"mouseUpHandler()\" \n\n            draggable=\"{{cells[y][x].status == 'start' || cells[y][x].status == 'end'}}\"\n            (dragstart) = \"DragStart($event, y, x)\"\n            \n            (drop) =\"MouseUp($event, y,x)\"\n            (dragover)=\"DragCancel($event,y,x)\"\n\n            (touchstart) = \"touchStart($event, y,x)\"\n            (touchend) = \"touchEnd($event, y,x)\"\n            (touchcancel) = \"touchCancel($event, y,x)\"\n            (touchmove) = \"touchMove($event, y,x)\"\n            \n            >\n                <div class=\"responsive-cell\" [ngStyle]=\"{'width': cell_width+'vw', 'height':cell_width+'vw'}\">\n                    <app-gridcell id=\"{{y+','+x}}\" #cell [cell] = \"cells[y][x]\"></app-gridcell>\n                </div>\n            </td>\n        </tr>\n    </table>\n\n</div>","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Walkthroughinfo } from 'src/app/models/walkthroughinfo';\n\n@Component({\n  selector: 'app-walkthrouh-tutorial',\n  templateUrl: './walkthrouh-tutorial.component.html',\n  styleUrls: ['./walkthrouh-tutorial.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class WalkthrouhTutorialComponent implements OnInit {\n  @Input('walkthrough_isShow') isShow: boolean = true;\n  @Output() reset_tutorial: EventEmitter<boolean> = new EventEmitter();\n\n  touch_btn_val: string = 'For Touch Devices';\n  color_representation: string = `\n\n  <div class=\"text-medium-light subtitle-padding\">\n    Color in grid represents type of Node/Block. Here are the mapping of each color with it\\'s meaning.\n    <div class=\"main_color_rep\" style=\"margin-top:20px;\">\n    <div class=\"flex-box-item\">\n        <div class=\"start_node1 node-box\"></div>\n        <div class=\"start_node_txt\">Start Node</div>\n    </div>\n    <div class=\"flex-box-item-right\">\n        <div class=\"gole_node node-box\" ></div>\n        <div class=\"gole_node_txt\">Gole Node</div>\n    </div>\n    <div class=\"flex-box-item\">\n        <div class=\"blocked_node node-box\"></div>\n        <div class=\"blocked_node_txt\">Blocked/Wall Node</div>\n    </div>\n    <div class=\"flex-box-item-right\">\n        <div class=\"toll_node node-box\"></div>\n      <div class=\"toll_node_txt\">Toll Node</div>\n    </div>\n\n    <div class=\"flex-box-item\">\n        <div class=\"unvisited_node node-box\"></div>\n        <div class=\"unvisited_node_txt\">Unvisitd Node</div>\n    </div>\n    <div class=\"flex-box-item-right\">\n        <div class=\"path_node node-box\"></div>\n      <div class=\"path_node_txt\">Path Node</div>\n    </div>\n    <div class=\"flex-box-item2\">\n        <div class=\"visited_node visited_node1 node-box\"></div>\n        <div class=\"visited_node visited_node2 node-box\"></div>\n        <div class=\"visited_node visited_node3 node-box\"></div>\n\n        <div class=\"visited_node_txt\">Visited Nodes</div>\n    </div>\n</div>\n  </div>\n  `;\n\n  wall_block_touch: string = `\n  <div class=\"text-medium-light touch-screen-wall\">\n      To create wall block on touch screen devices, follow below steps:\n      <ol>\n        <li>Uncheck \"Touch to Create Toll Node\" checkbox under \"Advance Options\" tab on navbar to enable touch to create wall capability.</li>\n        <img src=\"assets/Screenshot (21).png\" width=\"70%\" height=\"50%\" class=\"center-advance-opt-img\">\n        <li>Tap on cell to create wall node</li>\n      </ol>\n  </div> `;\n\n  wall_block_click: string = `\n  <div class=\"text-medium-light subtitle-padding wallnode_txt1\">\n  Left click on cell to create wall node\n  <div class=\"wallnode_txt2 text-small-light\">\n  Wall nodes are impossible to pass through, therefore path between start and gole node will never include them.\n  </div>\n  <div class=\"text-small-light\">\n  Mazes and patterns of wall nodes can be generated using the \"Maze and Pattern\" drop-down menu on navigation bar.\n  </div>\n  </div>\n  <img src=\"assets/toll_block.gif\" width=\"80%\" height=\"20%\">`;\n\n  toll_block_touch: string = `\n  <div class=\"text-medium-light touch-screen-wall\">\n      To create toll block on touch screen devices, follow below steps:\n      <ol>\n        <li>Check \"Touch to Create Toll Node\" checkbox under \"Advance Options\" tab on navbar to enable touch to create toll capability.</li>\n        <img src=\"assets/Screenshot (21).png\" width=\"70%\" height=\"50%\" class=\"center-advance-opt-img\">\n        <li>Tap on cell to create toll node</li>\n      </ol>\n  </div> `;\n\n  toll_block_click: string = `\n  <div class=\"text-medium-light subtitle-padding wallnode_txt1\">\n      Right click on cell to create toll node in gridworld.\n      <div class=\"tollnode_txt1 text-small-light\">\n      Unlike Wall nodes, Toll nodes allows path to pass through them,\n      but there is extra cost for permission.\n      </div>\n      <div class=\"text-small-light\">\n      Cost of toll node can be set under Options on navbar. Five is selected as default cost. \n      <br>\n      Select toll weight before creating toll block. \n      </div> \n  </div>\n  <img src=\"assets/toll_block.gif\" width=\"80%\" height=\"40%\">`;\n\n  walkthrough_steps: Walkthroughinfo[] = [\n    {\n      title: 'AlgoVisualizer',\n      body: `\n    <div class=\"text-medium-heavy\">\n        A fun way to visualize algorithms\n    </div>\n    <div class=\"text-medium-light subtitle-padding\">\n        Welcome, Let's Have a walkthrough of this tool\n    </div>\n    <img src=\"assets/Visualization_Intro.gif\" width=\"80%\" height=\"50%\">`,\n      next_btn: true,\n      prev_btn: false,\n      skip_btn: true,\n      touch_btn: false,\n    },\n    {\n      title: 'Visualiztion Buttons',\n      body: `\n    <img src=\"assets/algoVisualizer_btns.PNG\" width=\"80%\" height=\"50%\">\n    <div class=\"text-medium-light subtitle-padding\">\n    Use navigation bar buttons to visualize algorithm, clear visualization and reset/remove grid blocks.\n    </div>\n    `,\n      next_btn: true,\n      prev_btn: true,\n      skip_btn: true,\n      touch_btn: false,\n    },\n    {\n      title: \"Colors and It's Representations\",\n      body: this.color_representation,\n      next_btn: true,\n      prev_btn: true,\n      skip_btn: true,\n      touch_btn: false,\n    },\n    {\n      title: 'Wall Blocks',\n      body: this.wall_block_click,\n      next_btn: true,\n      prev_btn: true,\n      skip_btn: true,\n      touch_btn: true,\n    },\n    {\n      title:\n        'Toll Blocks <span class=\"toll_subtxt\">only effactive for waighted algorithms</span>',\n      body: this.toll_block_click,\n      next_btn: true,\n      prev_btn: true,\n      skip_btn: true,\n      touch_btn: true,\n    },\n    {\n      title: 'Drag and Drop',\n      body: `\n    <div class=\"text-medium-light subtitle-padding\">\n    Left click on Start or Goal cells and drag to move them and see the instant path change between them. \n    </div>\n    <img src=\"assets/drag_drop.gif\" width=\"100%\" height=\"50%\">\n    `,\n      next_btn: false,\n      prev_btn: true,\n      skip_btn: false,\n      touch_btn: false,\n    },\n  ];\n\n  walkthrough_page: number = 0;\n  message: string = 'hello world';\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log(this.walkthrough_steps);\n  }\n  onSkip() {\n    this.walkthrough_page = 0;\n    this.isShow = false;\n    this.reset_tutorial.emit(false);\n  }\n  onPrev() {\n    this.walkthrough_page = this.walkthrough_page - 1;\n  }\n  onNext() {\n    this.walkthrough_page = this.walkthrough_page + 1;\n  }\n  onTouch() {\n    if (this.touch_btn_val == 'For Touch Devices') {\n      if (\n        this.walkthrough_steps[this.walkthrough_page]['title'] == 'Wall Blocks'\n      ) {\n        this.walkthrough_steps[this.walkthrough_page]['body'] =\n          this.wall_block_touch;\n        this.touch_btn_val = 'For Click Devices';\n      } else {\n        this.walkthrough_steps[this.walkthrough_page]['body'] =\n          this.toll_block_touch;\n        this.touch_btn_val = 'For Click Devices';\n      }\n    } else {\n      if (\n        this.walkthrough_steps[this.walkthrough_page]['title'] == 'Wall Blocks'\n      ) {\n        this.walkthrough_steps[this.walkthrough_page]['body'] =\n          this.wall_block_click;\n        this.touch_btn_val = 'For Touch Devices';\n      } else {\n        this.walkthrough_steps[this.walkthrough_page]['body'] =\n          this.toll_block_click;\n        this.touch_btn_val = 'For Touch Devices';\n      }\n    }\n    console.log(\n      'walkthorough page',\n      this.walkthrough_steps[this.walkthrough_page]['title']\n    );\n  }\n}\n","<div class=\"main-tutorial-window\" *ngIf =\"isShow\">\n    <div class=\"tutorial-subwindow\">\n        <div class=\"walkthrough-title\">\n            <div class=\"title-name\" [innerHTML]=\"walkthrough_steps[walkthrough_page]['title']\">\n            </div>\n\n            <div class=\"touch_device_btn\" *ngIf=\"walkthrough_steps[walkthrough_page]['touch_btn']\">\n                <button (click)=\"onTouch()\" [innerHTML]=\"touch_btn_val\"></button>\n            </div>\n            <div class=\"cancel-button\" (click)=\"onSkip()\">\n            </div>\n        </div>\n        <div class=\"walkthrough-body\" [innerHTML]=\"walkthrough_steps[walkthrough_page]['body']\">\n        </div>\n\n        <div class=\"walkthrough-footer\">\n            <button (click)=\"onPrev()\" *ngIf=\"walkthrough_steps[walkthrough_page]['prev_btn']\">Previous</button>\n            <button (click)=\"onSkip()\" *ngIf=\"walkthrough_steps[walkthrough_page]['skip_btn']\">Skip</button>\n            <button (click)=\"onNext()\" *ngIf=\"walkthrough_steps[walkthrough_page]['next_btn']\">Next</button>\n            <button (click)=\"onSkip()\" *ngIf=\"!walkthrough_steps[walkthrough_page]['skip_btn']\">End</button>\n\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NavInfo } from 'src/app/models/navInfo';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css', './custom_styles.css', './checkbox_radio-input.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  @Output() information: EventEmitter<NavInfo> = new EventEmitter();\n  @Output() reset:  EventEmitter<boolean> = new EventEmitter();\n  @Output() grid_size:  EventEmitter<number> = new EventEmitter();\n  @Output() weight_values:  EventEmitter<number[]> = new EventEmitter(); //0 index ==> diagonal weight, 1 index ==> toll weight\n  @Output() mazesAndPatterns:EventEmitter<string> = new EventEmitter();\n  @Output() is_touch_toll:EventEmitter<boolean> = new EventEmitter();\n\n  toVis:NavInfo = new NavInfo();\n  favoriteColor:number = 5;\n  name!: string;\n\n  diagonal_weight:number = 1.42;\n  toll_weight:number = 5;\n\n  advance_setting!:boolean;\n\n  maze_pattern:string = \"Blank Grid\";\n\n  custom_grid_size:number = 30;\n\n  isHamburger_status:boolean = false;\n\n  is_touch_screen:boolean = false;\n \n  constructor(){\n    this.toVis.algorithm = \"Algorithms\";\n    this.toVis.algorithmSpeed = 50;\n    this.advance_setting = false;\n   }\n\n  ngOnInit(): void {\n    this.updateWeights();\n  }\n\n  RunVisualizer(){\n    if(window.innerWidth<1140){\n      // $('#hamburger_btn').click();\n      this.isHamburger_status = false;\n    }\n    if(this.toVis.algorithm != \"Algorithms\"){\n      this.reset.emit(true);\n      // var oldspeed = this.toVis.algorithmSpeed;\n      // this.toVis.algorithmSpeed = 400-oldspeed;\n      let id = window.setTimeout(() => {  this.information.emit(this.toVis);}, 100);\n      \n    }else{\n      this.information.emit(this.toVis);\n    }\n  }\n\n  changeTouchSetting(){\n    this.is_touch_screen = !this.is_touch_screen;\n    this.is_touch_toll.emit(this.is_touch_screen);\n    console.log(\"change touch setting\");\n    \n  }\n\n\n  RunReset(){\n    if(window.innerWidth<1140){\n      // $('#hamburger_btn').click();\n      this.isHamburger_status = false;\n    }\n    this.reset.emit(true);\n  }\n\n  RunResetAll(){\n    if(window.innerWidth<1140){\n      // $('#hamburger_btn').click();\n      this.isHamburger_status = false;\n    }\n    this.reset.emit(false);\n  }\n\n  mazesAndPattern(maze_type:string){\n    if(window.innerWidth<1140){\n      // $('#hamburger_btn').click();\n      this.isHamburger_status = false;\n    }\n    this.maze_pattern = maze_type;\n    this.reset.emit(false);\n    this.mazesAndPatterns.emit(this.maze_pattern);\n  }\n\n  turn_walkthrough_tutorial(){\n    this.reset.emit(false);\n    this.mazesAndPatterns.emit('isWalkthrough');\n  }\n\n  ResetGridSize(n:number){\n    this.custom_grid_size = n;\n    this.grid_size.emit(n);\n  }\n\n  updateWeights(){\n    if((this.diagonal_weight <= 100 && this.diagonal_weight >= 0) && (this.toll_weight <= 100 && this.toll_weight >= 0)){\n      this.weight_values.emit([this.diagonal_weight, this.toll_weight]); \n    }else{\n      if(this.diagonal_weight > 100){\n        this.diagonal_weight = 100;\n      }else if( this.diagonal_weight <= 0){\n        this.diagonal_weight = 0;\n      }\n\n      if(this.toll_weight > 100){\n        this.toll_weight = 100;\n      }else if(this.toll_weight <= 0){\n        this.toll_weight = 0;\n      }\n      this.weight_values.emit([this.diagonal_weight, this.toll_weight]); \n    }\n  }\n\n  increment_num(t:number){\n    if(t == 0){\n        if(this.toll_weight < 100){\n          this.toll_weight = this.toll_weight+1;\n        }\n    }else if(t == 1){\n      if(this.diagonal_weight < 100){\n        this.diagonal_weight = this.diagonal_weight + 1;\n      }\n    }\n    this.weight_values.emit([this.diagonal_weight, this.toll_weight]); \n    // this.updateWeights();\n}\n\ndecrement_num(t:number){\n    if(t == 0){\n\n      if(this.toll_weight > 1){\n        this.toll_weight = this.toll_weight-1;\n      }\n    }else if(t == 1){\n      if(this.diagonal_weight > 1){\n        this.diagonal_weight = this.diagonal_weight - 1;\n      }\n    }\n    this.weight_values.emit([this.diagonal_weight, this.toll_weight]); \n    // this.updateWeights();\n}\n}\n","<header style=\"width: 100vw; z-index: 10; position: absolute\">\n  <div class=\"logo navhome\" (click)=\"turn_walkthrough_tutorial()\">\n    AlgoVisualizer\n  </div>\n\n  <a\n    href=\"#\"\n    id=\"hamburger_btn\"\n    class=\"toggle__button\"\n    (click)=\"isHamburger_status = !isHamburger_status\"\n    [class.open]=\"isHamburger_status\"\n  >\n    <span class=\"toggle__bar\"></span>\n    <span class=\"toggle__bar\"></span>\n    <span class=\"toggle__bar\"></span>\n  </a>\n\n  <ul class=\"nav__links\" [class.active]=\"isHamburger_status\">\n    <li>\n      <a href=\"#\">Algorithms</a>\n      <ul style=\"width: 250px\">\n        <li\n          (click)=\"this.toVis.algorithm = 'BFS'\"\n          [class.opt-active]=\"this.toVis.algorithm == 'BFS'\"\n        >\n          BFS (Breadth First Search)\n        </li>\n        <li\n          (click)=\"this.toVis.algorithm = 'DFS'\"\n          [class.opt-active]=\"this.toVis.algorithm == 'DFS'\"\n        >\n          DFS (Depth First Search)\n        </li>\n        <li\n          (click)=\"this.toVis.algorithm = 'Dijkstra'\"\n          [class.opt-active]=\"this.toVis.algorithm == 'Dijkstra'\"\n        >\n          Dijkstra's\n        </li>\n        <li\n          (click)=\"this.toVis.algorithm = 'A* algorithm'\"\n          [class.opt-active]=\"this.toVis.algorithm == 'A* algorithm'\"\n        >\n          A* Algorithm\n        </li>\n      </ul>\n    </li>\n    <li>\n      <a href=\"#\">Grid Size</a>\n      <ul>\n        <li\n          (click)=\"ResetGridSize(10)\"\n          [class.opt-active]=\"this.custom_grid_size == 10\"\n        >\n          10 X 20\n        </li>\n        <li\n          (click)=\"ResetGridSize(20)\"\n          [class.opt-active]=\"this.custom_grid_size == 20\"\n        >\n          20 X 40\n        </li>\n        <li\n          (click)=\"ResetGridSize(30)\"\n          [class.opt-active]=\"this.custom_grid_size == 30\"\n        >\n          30 X 60\n        </li>\n        <li\n          (click)=\"ResetGridSize(40)\"\n          [class.opt-active]=\"this.custom_grid_size == 40\"\n        >\n          40 X 80\n        </li>\n        <li\n          (click)=\"ResetGridSize(50)\"\n          [class.opt-active]=\"this.custom_grid_size == 50\"\n        >\n          50 X 100\n        </li>\n      </ul>\n    </li>\n    <li>\n      <a href=\"#\">Pattern & Maze</a>\n      <ul style=\"width: 250px\">\n        <li\n          (click)=\"mazesAndPattern('Blank Grid')\"\n          [class.opt-active]=\"this.maze_pattern == 'Blank Grid'\"\n        >\n          Blank Grid\n        </li>\n        <li\n          (click)=\"mazesAndPattern('Random Pattern')\"\n          [class.opt-active]=\"this.maze_pattern == 'Random Pattern'\"\n        >\n          Random Pattern\n        </li>\n        <li\n          (click)=\"mazesAndPattern('Recursive Division')\"\n          [class.opt-active]=\"this.maze_pattern == 'Recursive Division'\"\n        >\n          Recursive Division\n        </li>\n        <li\n          (click)=\"mazesAndPattern('Recursive Division (Verticle skew)')\"\n          [class.opt-active]=\"\n            this.maze_pattern == 'Recursive Division (Verticle skew)'\n          \"\n        >\n          Recursive Division (Verticle Skew)\n        </li>\n        <li\n          (click)=\"mazesAndPattern('Recursive Division (Horizontal skew)')\"\n          [class.opt-active]=\"\n            this.maze_pattern == 'Recursive Division (Horizontal skew)'\n          \"\n        >\n          Recursive Division (Horizontal Skew)\n        </li>\n      </ul>\n    </li>\n    <li>\n      <a href=\"#\">Advance Options</a>\n      <ul style=\"width: 500px\">\n        <li class=\"advanceOpt\">\n          <span class=\"sub_advanceopt\">\n            <label for=\"allow_diagonal\" class=\"custom-checkbox\">\n              <input\n                class=\"custom-checkbox__input\"\n                type=\"checkbox\"\n                id=\"allow_diagonal\"\n                (change)=\"\n                  this.toVis.allowDiagonals = !this.toVis.allowDiagonals\n                \"\n              />\n              <div class=\"custom-checkbox__box\"></div>\n              Allow Diagonals\n            </label>\n          </span>\n\n          <span class=\"sub_advanceopt\">\n            <label for=\"diagonal_w\"\n              >Diagonal Weight\n              <div class=\"container\">\n                <span class=\"next\" (click)=\"increment_num(1)\"></span>\n                <span class=\"prev\" (click)=\"decrement_num(1)\"></span>\n                <div class=\"box_outer\">\n                  <input\n                    class=\"box\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    max=\"100\"\n                    min=\"1\"\n                    value=\"{{ this.diagonal_weight }}\"\n                    [(ngModel)]=\"this.diagonal_weight\"\n                    (focusout)=\"updateWeights()\"\n                  />\n                </div>\n              </div>\n            </label>\n          </span>\n        </li>\n        <li class=\"advanceOpt\">\n          <span class=\"sub_advanceopt\">\n            <label for=\"allow_bidirection\" class=\"custom-checkbox\">\n              <input\n                class=\"custom-checkbox__input\"\n                type=\"checkbox\"\n                id=\"allow_bidirection\"\n                (change)=\"\n                  this.toVis.allowBidirection = !this.toVis.allowBidirection\n                \"\n              />\n              <div class=\"custom-checkbox__box\"></div>\n              Allow Bidirection\n            </label>\n          </span>\n          <span class=\"sub_advanceopt\">\n            <label for=\"toll_w\"\n              >Toll Node Weight\n              <div class=\"container\">\n                <span class=\"next\" (click)=\"increment_num(0)\"></span>\n                <span class=\"prev\" (click)=\"decrement_num(0)\"></span>\n                <div class=\"box_outer\">\n                  <input\n                    id=\"toll_w\"\n                    class=\"box\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    max=\"100\"\n                    min=\"1\"\n                    value=\"{{ this.toll_weight }}\"\n                    [(ngModel)]=\"this.toll_weight\"\n                    (focusout)=\"updateWeights()\"\n                  />\n                </div>\n              </div>\n            </label>\n          </span>\n        </li>\n\n        <li class=\"advanceOpt\" style=\"background-color: #24252a\">Heuristics</li>\n\n        <li class=\"advanceOpt\">\n          <span style=\"text-align: center\">\n            <label for=\"Heuristics_manhattan\" class=\"custom-radio-btn\">\n              <input\n                type=\"radio\"\n                id=\"Heuristics_manhattan\"\n                (click)=\"this.toVis.heuristics = 'manhattan'\"\n                name=\"Heuristics\"\n                class=\"radio__input\"\n                checked\n              />\n              <div class=\"radio__radio\"></div>\n              Manhattan\n            </label>\n          </span>\n          <span style=\"text-align: center\">\n            <label for=\"Heuristics_euclidean\" class=\"custom-radio-btn\">\n              <input\n                type=\"radio\"\n                id=\"Heuristics_euclidean\"\n                (click)=\"this.toVis.heuristics = 'euclidean'\"\n                name=\"Heuristics\"\n                class=\"radio__input\"\n              />\n              <div class=\"radio__radio\"></div>\n              Euclidean\n            </label>\n          </span>\n        </li>\n\n        <li class=\"advanceOpt\" style=\"background-color: #24252a\">Speed</li>\n\n        <li class=\"advanceOpt\">\n          <div class=\"slider-continer\">\n            <span class=\"slider-bar\"\n              ><span\n                class=\"slider-fill\"\n                [style.width.%]=\"toVis.algorithmSpeed / 4\"\n              ></span\n            ></span>\n            <input\n              type=\"range\"\n              class=\"custom-slider\"\n              min=\"0\"\n              max=\"400\"\n              value=\"350\"\n              id=\"formControlRange\"\n              [(ngModel)]=\"toVis.algorithmSpeed\"\n            />\n          </div>\n        </li>\n\n        <li class=\"advanceOpt\" style=\"background-color: #24252a\">\n          For Touch Screen Device\n        </li>\n\n        <li class=\"advanceOpt\">\n          <span style=\"text-align: center\">\n            <label for=\"is_touch_toll\" class=\"custom-checkbox\">\n              <input\n                class=\"custom-checkbox__input\"\n                type=\"checkbox\"\n                id=\"is_touch_toll\"\n                (change)=\"changeTouchSetting()\"\n              />\n              <div class=\"custom-checkbox__box\"></div>\n              Touch to Create Toll Node\n            </label>\n          </span>\n        </li>\n      </ul>\n    </li>\n  </ul>\n\n  <div class=\"nav__buttons\" [class.active]=\"isHamburger_status\">\n    <a class=\"cta\" href=\"#\"\n      ><button type=\"submit\" (click)=\"RunVisualizer()\">\n        Visualize <br />\n        {{ this.toVis.algorithm }}\n      </button></a\n    >\n    <a class=\"cta\" href=\"#\"\n      ><button type=\"submit\" (click)=\"RunReset()\">\n        Reset <br />\n        Visualization\n      </button></a\n    >\n    <a class=\"cta\" href=\"#\"\n      ><button type=\"submit\" (click)=\"RunResetAll()\">\n        Reset <br />\n        All\n      </button></a\n    >\n  </div>\n</header>\n","import { Cell } from '../models/cell';\nimport { NavInfo } from '../models/navInfo';\nimport { AlgoHelper } from './algo-helper';\n\nexport class BFS {\n  gridcells: Cell[][] = [];\n  visited: any[] = [];\n  isPathAvail: boolean = false;\n  navigation!: NavInfo;\n\n  start_mid: number[] = [];\n  end_mid: number[] = [];\n\n  constructor() {}\n\n  runBFS(\n    cells: Cell[][],\n    start: number[],\n    end: number[],\n    navinformation: NavInfo\n  ) {\n    this.gridcells = cells;\n    this.navigation = navinformation;\n\n    if (this.navigation.allowBidirection) {\n      this.start_mid = [];\n      this.end_mid = [];\n\n      this.isPathAvail = this.BFS_Bidirection_Path(start, end);\n    } else {\n      this.isPathAvail = this.BFS_Path(start, end);\n    }\n  }\n\n  generatePath(start: number[], end: number[]) {\n    if (this.navigation.allowBidirection) {\n      return AlgoHelper.generateBidirectionPath(\n        start,\n        end,\n        this.gridcells,\n        this.start_mid,\n        this.end_mid\n      );\n    } else {\n      return AlgoHelper.generatePath(start, end, this.gridcells);\n    }\n  }\n\n  BFS_Path(start: number[], end: number[]) {\n    var q = [];\n    this.visited = [];\n    q.push(start);\n    while (q.length != 0) {\n      var current = q.shift();\n\n      if (current) {\n        if (this.gridcells[current[0]][current[1]].status == 'end') {\n          return true;\n        }\n        this.gridcells[current[0]][current[1]].vertex_status = 'current';\n\n        if (this.navigation.allowDiagonals) {\n          var neighbors = AlgoHelper.findAllNeighbors(\n            current[0],\n            current[1],\n            this.gridcells.length,\n            this.gridcells[0].length\n          );\n        } else {\n          var neighbors = AlgoHelper.findNeighbors(\n            current[0],\n            current[1],\n            this.gridcells.length,\n            this.gridcells[0].length\n          );\n        }\n\n        while (neighbors.length != 0) {\n          var n = neighbors.shift();\n          if (n) {\n            if (\n              this.gridcells[n[0]][n[1]].vertex_status == 'unvisited' &&\n              this.gridcells[n[0]][n[1]].status != 'close'\n            ) {\n              this.gridcells[n[0]][n[1]].vertex_status = 'neighbors';\n              q.push(n);\n              this.gridcells[n[0]][n[1]].prev = current;\n            }\n          }\n        }\n        this.visited.push(current);\n        this.gridcells[current[0]][current[1]].vertex_status = 'visited';\n      } else {\n        throw new Error('Current node is undefined');\n      }\n    }\n    return false;\n  }\n\n  BFS_Bidirection_Path(start: number[], end: number[]) {\n    this.visited = [];\n    var q_start = [];\n    q_start.push(start);\n\n    var q_goal = [];\n    q_goal.push(end);\n\n    while (q_start.length != 0 && q_goal.length != 0) {\n      if (q_start.length != 0) {\n        var current = q_start.shift();\n        if (current) {\n          if (\n            this.gridcells[current[0]][current[1]].status == 'end' ||\n            this.gridcells[current[0]][current[1]].vertex_status ==\n              'visited_goal'\n          ) {\n            return true;\n          }\n\n          this.gridcells[current[0]][current[1]].vertex_status = 'current';\n\n          if (this.navigation.allowDiagonals) {\n            var neighbors = AlgoHelper.findAllNeighbors(\n              current[0],\n              current[1],\n              this.gridcells.length,\n              this.gridcells[0].length\n            );\n          } else {\n            var neighbors = AlgoHelper.findNeighbors(\n              current[0],\n              current[1],\n              this.gridcells.length,\n              this.gridcells[0].length\n            );\n          }\n\n          while (neighbors.length != 0) {\n            var n = neighbors.shift();\n            if (n) {\n              if (\n                (this.gridcells[n[0]][n[1]].vertex_status == 'unvisited' ||\n                  this.gridcells[n[0]][n[1]].vertex_status == 'visited_goal') &&\n                this.gridcells[n[0]][n[1]].status != 'close'\n              ) {\n                if (\n                  this.gridcells[n[0]][n[1]].vertex_status == 'visited_goal'\n                ) {\n                  this.visited.push(current);\n                  this.gridcells[current[0]][current[1]].vertex_status =\n                    'visited_start';\n\n                  this.start_mid = current;\n                  this.end_mid = n;\n\n                  if (\n                    this.gridcells[n[0]][n[1]].status != 'start' &&\n                    this.gridcells[n[0]][n[1]].status != 'end'\n                  ) {\n                    this.gridcells[n[0]][n[1]].status = 'mid';\n                    this.gridcells[n[0]][n[1]].vertex_status = 'unvisited';\n                  }\n                  return true;\n                }\n                this.gridcells[n[0]][n[1]].vertex_status = 'neighbors';\n                q_start.push(n);\n                this.gridcells[n[0]][n[1]].prev = current;\n              }\n            }\n          }\n          this.visited.push(current);\n          this.gridcells[current[0]][current[1]].vertex_status =\n            'visited_start';\n\n          // console.log(\"If visited included in current or not \",  this.visited.includes(current));\n        }\n      } else {\n        throw new Error('Current node is undefined');\n      }\n      if (q_goal.length != 0) {\n        var current = q_goal.shift();\n        if (current) {\n          if (\n            this.gridcells[current[0]][current[1]].status == 'start' ||\n            this.gridcells[current[0]][current[1]].vertex_status ==\n              'visited_start'\n          ) {\n            return true;\n          }\n\n          this.gridcells[current[0]][current[1]].vertex_status = 'current';\n\n          if (this.navigation.allowDiagonals) {\n            var neighbors = AlgoHelper.findAllNeighbors(\n              current[0],\n              current[1],\n              this.gridcells.length,\n              this.gridcells[0].length\n            );\n          } else {\n            var neighbors = AlgoHelper.findNeighbors(\n              current[0],\n              current[1],\n              this.gridcells.length,\n              this.gridcells[0].length\n            );\n          }\n\n          while (neighbors.length != 0) {\n            var n = neighbors.shift();\n            if (n) {\n              if (\n                (this.gridcells[n[0]][n[1]].vertex_status == 'unvisited' ||\n                  this.gridcells[n[0]][n[1]].vertex_status ==\n                    'visited_start') &&\n                this.gridcells[n[0]][n[1]].status != 'close'\n              ) {\n                if (\n                  this.gridcells[n[0]][n[1]].vertex_status == 'visited_start'\n                ) {\n                  this.visited.push(current);\n                  this.gridcells[current[0]][current[1]].vertex_status =\n                    'visited_goal';\n\n                  this.start_mid = n;\n                  this.end_mid = current;\n\n                  if (\n                    this.gridcells[n[0]][n[1]].status != 'start' &&\n                    this.gridcells[n[0]][n[1]].status != 'end'\n                  ) {\n                    this.gridcells[n[0]][n[1]].status = 'mid';\n                    this.gridcells[n[0]][n[1]].vertex_status = 'unvisited';\n                  }\n\n                  return true;\n                }\n                this.gridcells[n[0]][n[1]].vertex_status = 'neighbors';\n                q_goal.push(n);\n                this.gridcells[n[0]][n[1]].prev = current;\n              }\n            }\n          }\n          this.visited.push(current);\n          this.gridcells[current[0]][current[1]].vertex_status = 'visited_goal';\n        }\n      } else {\n        throw new Error('Current node is undefined');\n      }\n    }\n\n    return false;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ShepherdService } from 'angular-shepherd';\nimport { NotificationsService, Options } from 'angular2-notifications';\nimport { Astar } from 'src/app/algorithms/a-star';\nimport { BFS } from 'src/app/algorithms/BFS';\nimport { DFS } from 'src/app/algorithms/DFS';\nimport { Dijksta } from 'src/app/algorithms/Dijkstra';\nimport { NavInfo } from 'src/app/models/navInfo';\nimport { Cell } from '../../models/cell';\nimport { GridcellComponent } from '../gridcell/gridcell.component';\nimport { GridworldComponent } from '../gridworld/gridworld.component';\nimport { WalkthrouhTutorialComponent } from '../walkthrouh-tutorial/walkthrouh-tutorial.component';\n\n@Component({\n  selector: 'app-algovisualizer',\n  templateUrl: './algovisualizer.component.html',\n  styleUrls: ['./algovisualizer.component.css']\n})\nexport class AlgovisualizerComponent implements OnInit {\n\n  @ViewChild('grid') child!: GridworldComponent;\n\n  isWalkthrough:boolean = false;\n\n  sizeOfGrid:number[] = [30,60];\n  bfs!: BFS;\n  dfs!:DFS;\n  dijksta!:Dijksta;\n  astar!:Astar;\n\n  cells:Cell[][] = [];\n  isVisualizing:boolean = false;\n  inProcess:boolean = false;\n\n\n  navigation!:NavInfo;\n  diagonal_weight!:number;\n  toll_weight!:number;\n\n  is_touch_toll:boolean=false;\n\n  startNode:number[] = [15,10];\n  endNode:number[] = [15,50];\n\n  options:Options = {\n    position: [\"top\", \"left\"],\n    // lastOnBottom: true,\n    timeOut: 3000,\n    showProgressBar: true,\n    pauseOnHover: true,\n    clickToClose: true,\n    preventDuplicates: true\n}\n  \n  constructor(private shepherdService: ShepherdService, private notificationService:NotificationsService){};\n\n  ngOnInit(): void {\n\n    for (let y =0; y<this.sizeOfGrid[0]; y++){\n      this.cells[y] =[];\n      for(let x=0; x<this.sizeOfGrid[1]; x++){\n        this.cells[y][x] = new Cell();\n      }\n    }\n    this.cells[this.startNode[0]][this.startNode[1]].status = 'start';\n    this.cells[this.endNode[0]][this.endNode[1]].status ='end';\n\n    this.bfs = new BFS();\n    this.dfs = new DFS();\n    this.dijksta = new Dijksta();\n    this.astar = new Astar();\n\n   // this.shapherds_tour();\n\n    // if(window.innerWidth>700 && window.innerHeight>500){\n    //   this.shepherdService.start();\n    // }\n    //// this.shepherdService.start();\n\n    this.isWalkthrough = true;\n\n\n\n\n\n    \n  }\n\n  onSuccess(){\n    this.notificationService.success('Item created!', 'Click to undo...', {\n      timeOut: 3000,\n      showProgressBar: true,\n      pauseOnHover: true,\n      clickToClose: true\n    });\n  }\n  noPath(){\n    this.notificationService.remove();\n    this.notificationService.error('No Path', 'Path not available between start and end node', {\n      timeOut: 5000\n    });\n  }\n\n  // availPath(){\n  //   this.notificationService.remove();\n  // }\n\n  // resetWalkthrough(event:any){\n  //   this.isWalkthrough = event;\n  // }\n\n  resetWalkthrough(event:any){\n    console.log(\"walkthrough reset\", event);\n    this.isWalkthrough = event;\n  }\n\n  ChangeGridSize(event:number){\n    console.log(\"Change Grid Size\");\n    this.cells = [];\n\n    this.sizeOfGrid = [event,2*event];\n\n    \n    // this.startNode = [this.randomInteger(0,event-1),this.randomInteger(0,(2*event)-1)];\n    // this.endNode = [(this.startNode[0]+1)%event ,this.randomInteger(0,(2*event)-1)];\n\n    this.startNode = [Math.floor(event/2),Math.floor((event*2)*.20)];\n    this.endNode = [Math.floor(event/2),2*event - Math.floor(((event*2)*.20))];\n\n    for (let y =0; y<this.sizeOfGrid[0]; y++){\n      this.cells[y] =[];\n      for(let x=0; x<this.sizeOfGrid[1]; x++){\n        this.cells[y][x] = new Cell();\n      }\n    }\n    this.cells[this.startNode[0]][this.startNode[1]].status = 'start';\n    this.cells[this.endNode[0]][this.endNode[1]].status ='end';\n\n    this.resetEverything(false);\n    \n  }\n\n  randomInteger(min:number, max:number) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n// NavBar Functions\n  infoFromNav(event:NavInfo){\n    if(event.algorithm != \"Algorithms\"){\n      this.navigation = event;\n      if(event.algorithm == \"BFS\"){\n        // this.generateRandomPatterns();\n        // console.log(\"Run Sucess\");\n        \n        this.runBFSPath();\n      }else if(event.algorithm == \"DFS\"){      \n        this.runDFSPath();\n      }else if(event.algorithm == \"Dijkstra\"){\n        this.runDijkstraPath();\n      }else if(event.algorithm == \"A* algorithm\"){\n        this.runAstarPath();\n      }\n    }else{\n      this.notificationService.warn('Select Algorithm', 'select algorithm to visualize');\n    }\n  }\n\n  changeTouchSetting(event:boolean){\n    console.log(\"algovisualizer touch screen\", event);\n    \n    this.is_touch_toll = event;\n  }\n\n  resetEverything(event:boolean){\n    this.isVisualizing = false;\n    this.inProcess = false;\n    let id = window.setTimeout(() => {}, 0);\n    while (id) {            \n      window.clearTimeout(id);\n      id--;\n    }\n\n    if(event){   \n      // Remove visualization not the walls\n      this.child.resetGridworld();\n    }else{\n    //remove everything from gridworld, including walls\n    // console.log(\"Reset Everything\");\n    this.child.clearGridWorld();\n    }\n  }\n\n  changeWeightValues(event:number[]){\n    this.diagonal_weight = event[0];\n    this.toll_weight = event[1];\n    // console.log(\"Change Weght Values\", event);\n    \n  }\n\n  change_mazes_pattern(event:string){\n    if(event == 'isWalkthrough'){\n      // this.shepherdService.start();\n      this.isWalkthrough = true;\n    }else if(event == 'Random Pattern'){\n      this.child.generateRandomPatterns();\n    }else if(event == 'Recursive Division'){\n      this.child.generateRecursiveDivisionMaze(0);\n    }else if(event == 'Recursive Division (Verticle skew)'){\n      this.child.generateRecursiveDivisionMaze(-1);\n    }else if(event == 'Recursive Division (Horizontal skew)'){\n      this.child.generateRecursiveDivisionMaze(1);\n    }\n  }\n\n  generateRandomPatterns(){\n    for (let y =0; y<this.sizeOfGrid[0]; y++){\n      for(let x=0; x<this.sizeOfGrid[1]; x++){\n        this.cells[y][x].status = 'close';\n      }\n    }\n  }\n\n\n// new reset visualizer function to just stop visualizing for just few seconds and start over\n// Drag and drop when visulaization is in process\n  resetDragDropVisualizer(event:boolean){\n    this.isVisualizing = false;\n    // this.inProcess = false;\n    let id = window.setTimeout(() => {}, 0);\n    while (id) {            \n      window.clearTimeout(id);\n      id--;\n    }\n\n    if(event){   \n      // Remove visualization not the walls\n      this.child.resetGridworld();\n    }else{\n    //remove everything from gridworld, including walls\n    // console.log(\"Reset Everything\");\n    this.child.clearGridWorld();\n    }\n  }\n\n// _______________________________________________________\n\n// Function runs when start and end node is dragged by user and refreshes the gridworld\n  startOrEndDragged(event:any){\n    if(event[0] == true){\n      this.startNode = [event[1],event[2]];\n      this.updateAfterDrag();\n    }else{\n      this.endNode = [event[1],event[2]];\n      this.updateAfterDrag();\n    }\n  }\n\n  // Update the gridworld after start or dragged is moved:\n  // if path is already visualizing --> upadate everything at same time\n  // if path is in process of visualizing --> start visualization process from begining\n  // if no path is  visualizing --> reset everything\n  updateAfterDrag(){\n    if(this.isVisualizing == true){  \n      if(this.navigation.algorithm == \"BFS\"){\n        this.runBFSReset();\n      }else if(this.navigation.algorithm == \"DFS\"){\n        this.runDFSReset();\n      }else if(this.navigation.algorithm == \"Dijkstra\"){\n        this.runDijkstaReset();\n      }else if(this.navigation.algorithm == \"A* algorithm\"){\n        this.runAstarReset();\n      }\n\n    }else if(this.inProcess == true){\n      // this.resetEverything(true);\n      this.resetDragDropVisualizer(true);\n      let id = window.setTimeout(() => {\n        if(this.navigation.algorithm == \"BFS\"){\n          this.runBFSPath();\n        }else if(this.navigation.algorithm == \"DFS\"){\n          this.runDFSPath();\n        }else if(this.navigation.algorithm == \"Dijkstra\"){\n          this.runDijkstraPath();\n        }else if(this.navigation.algorithm == \"A* algorithm\"){\n          this.runAstarPath();\n        }\n\n      }, 100);\n    }else{            \n      this.resetEverything(true);\n    }\n  }\n\n  //Provied path array it will simulate path on gridworld\n  runPathSimulation(path:any[]){\n    for (let i = 0; i < path.length; i++) {\n      let p  = path[path.length-i-1];\n      this.child.cellcomponents.forEach((cmp: GridcellComponent) => {\n        if (cmp.cell == this.cells[p[0]][p[1]]) {                    \n          setTimeout(() => {\n            cmp.runChangeDetector();\n          },this.navigation.algorithmSpeed * i);\n        }\n      });\n    }\n  }\n  \n  // when wall is created this function reset the grid world if path is not visualizing,\n  // If path is visualizing then depending on algorithm type it update new path\n  oniswallClicked(event: any){\n    if(event == true){\n      if(this.isVisualizing == true){\n        if(this.navigation.algorithm == \"BFS\"){\n          this.runBFSReset();\n        }else if(this.navigation.algorithm == \"DFS\"){\n          this.runDFSReset();\n        }else if(this.navigation.algorithm == \"Dijkstra\"){\n          this.runDijkstaReset();\n        }else if(this.navigation.algorithm == \"A* algorithm\"){\n          this.runAstarReset();\n        }\n      }\n    }else{\n      this.resetEverything(true);\n    }\n  }\n\n\n// ******************************** BFS **************************************************\n\n  runBFSPath(){\n    this.inProcess = true;\n    this.bfs.runBFS(this.cells, this.startNode, this.endNode, this.navigation);\n    this.runBFSSimulation();\n\n    let path = [];\n    setTimeout(() => {\n      if(this.bfs.isPathAvail == true){\n        this.notificationService.remove();\n        path = this.bfs.generatePath(this.startNode, this.endNode);\n        this.runPathSimulation(path);\n      }else{\n        this.noPath();\n      }\n    }, this.navigation.algorithmSpeed * (this.bfs.visited.length-1));\n\n    setTimeout(() => {\n      this.isVisualizing = true;\n      this.inProcess = false;\n    }, this.navigation.algorithmSpeed * (this.bfs.visited.length-1) + this.navigation.algorithmSpeed*(path.length-1));\n  }\n\n  runBFSSimulation(){   \n    for (let i = 0; i < this.bfs.visited.length; i++) {\n      this.child.cellcomponents.forEach((cmp: GridcellComponent) => {\n        var c = this.bfs.visited[i];\n        if (cmp.cell == this.cells[c[0]][c[1]]) {                    \n          setTimeout(() => {\n            cmp.runChangeDetector();            \n          }, this.navigation.algorithmSpeed * i);\n        }\n      });\n    }\n  }\n  \n  runBFSReset(){            \n    let id = window.setTimeout(() => {}, 0);\n    while (id) {\n      window.clearTimeout(id);\n      id--;\n    }\n    this.child.resetGridworld();\n    \n\n    this.bfs.runBFS(this.cells, this.startNode, this.endNode, this.navigation);\n    if(this.bfs.isPathAvail == true){\n      this.notificationService.remove();\n      this.bfs.generatePath(this.startNode, this.endNode);\n    }else{\n      this.noPath();\n    }\n    this.child.refreshGridworld();\n  }\n\n  // ******************************* DFS ****************************************************\n\n  runDFSPath(){\n    this.inProcess = true;\n    this.dfs.runDFS(this.cells, this.startNode, this.endNode, this.navigation);\n    this.runDFSSimulation();\n\n    let path = [];\n    setTimeout(() => {\n      if(this.dfs.isPathAvail == true){\n        this.notificationService.remove();\n        path = this.dfs.generatePath(this.startNode, this.endNode);\n        this.runPathSimulation(path);\n      }else{\n        this.noPath();\n      }\n    }, this.navigation.algorithmSpeed * (this.dfs.visited.length-1));\n\n    setTimeout(() => {\n      this.isVisualizing = true;\n      this.inProcess = false;\n    }, this.navigation.algorithmSpeed * (this.dfs.visited.length-1) + this.navigation.algorithmSpeed*(path.length-1));\n  }\n\n  runDFSSimulation(){\n    for (let i = 0; i < this.dfs.visited.length; i++) {\n      this.child.cellcomponents.forEach((cmp: GridcellComponent) => {\n        var c = this.dfs.visited[i];\n        if (cmp.cell == this.cells[c[0]][c[1]]) {                    \n          setTimeout(() => {\n            cmp.runChangeDetector();            \n          }, this.navigation.algorithmSpeed * i);\n        }\n      });\n    }\n  }\n\n  runDFSReset(){            \n    let id = window.setTimeout(() => {}, 0);\n    while (id) {\n      window.clearTimeout(id);\n      id--;\n    }\n    this.child.resetGridworld();\n    \n\n    this.dfs.runDFS(this.cells, this.startNode, this.endNode, this.navigation);\n    if(this.dfs.isPathAvail == true){\n      this.notificationService.remove();\n      this.dfs.generatePath(this.startNode, this.endNode);\n    }else{\n      this.noPath();\n    }\n    this.child.refreshGridworld();\n  }\n\n  // ***************************** Dijkstra's algorithm ***********************************88\n\n  runDijkstraPath(){\n    this.inProcess = true;    \n    this.dijksta.runDijksta(this.cells, this.startNode, this.endNode, this.navigation , this.diagonal_weight);\n    this.runDijkstaSimulation();\n\n    let path = [];\n    setTimeout(() => {\n      if(this.dijksta.isPathAvail == true){\n        this.notificationService.remove();\n        path = this.dijksta.generatePath(this.startNode, this.endNode);\n        this.runPathSimulation(path);\n      }else{\n        this.noPath();\n      }\n    }, this.navigation.algorithmSpeed * (this.dijksta.visited.length-1));\n\n    setTimeout(() => {\n      this.isVisualizing = true;\n      this.inProcess = false;\n    }, this.navigation.algorithmSpeed * (this.dijksta.visited.length-1) + this.navigation.algorithmSpeed*(path.length-1));\n  }\n\n  runDijkstaSimulation(){\n    // console.log(\"Visited length: \", this.dijksta.visited.length);\n    for (let i = 0; i < this.dijksta.visited.length; i++) {\n      \n      this.child.cellcomponents.forEach((cmp: GridcellComponent) => {\n        var c = this.dijksta.visited[i];\n        if (cmp.cell == this.cells[c[0]][c[1]]) {                    \n          setTimeout(() => {\n            cmp.runChangeDetector();            \n          }, this.navigation.algorithmSpeed * i);\n        }\n      });\n    }\n  }\n\n  runDijkstaReset(){            \n    let id = window.setTimeout(() => {}, 0);\n    while (id) {\n      window.clearTimeout(id);\n      id--;\n    }\n    this.child.resetGridworld();\n    \n\n    this.dijksta.runDijksta(this.cells, this.startNode, this.endNode, this.navigation, this.diagonal_weight);\n    if(this.dijksta.isPathAvail == true){\n      this.notificationService.remove();\n      this.dijksta.generatePath(this.startNode, this.endNode);\n    }else{\n      this.noPath();\n    }\n    this.child.refreshGridworld();\n  }\n\n  // ***************************** A* Algorithm ****************************************\n\n\n  runAstarPath(){\n    this.inProcess = true;    \n    this.astar.runAstar(this.cells, this.startNode, this.endNode, this.navigation, this.diagonal_weight);\n    this.runAstarSimulation();\n\n    let path = [];\n    setTimeout(() => {\n      if(this.astar.isPathAvail == true){\n        this.notificationService.remove();\n        path = this.astar.generatePath(this.startNode, this.endNode);\n        this.runPathSimulation(path);\n      }else{\n        this.noPath();\n      }\n    }, this.navigation.algorithmSpeed * (this.astar.visited.length-1));\n\n    setTimeout(() => {\n      this.isVisualizing = true;\n      this.inProcess = false;\n    }, this.navigation.algorithmSpeed * (this.astar.visited.length-1) + this.navigation.algorithmSpeed*(path.length-1));\n  }\n\n  runAstarSimulation(){\n    for (let i = 0; i < this.astar.visited.length; i++) {\n      this.child.cellcomponents.forEach((cmp: GridcellComponent) => {\n        var c = this.astar.visited[i];\n        if (cmp.cell == this.cells[c[0]][c[1]]) {                    \n          setTimeout(() => {\n            cmp.runChangeDetector();            \n          }, this.navigation.algorithmSpeed * i);\n        }\n      });\n    }\n  }\n\n  runAstarReset(){            \n    let id = window.setTimeout(() => {}, 0);\n    while (id) {\n      window.clearTimeout(id);\n      id--;\n    }\n    this.child.resetGridworld();\n    \n\n    this.astar.runAstar(this.cells, this.startNode, this.endNode, this.navigation, this.diagonal_weight);\n    if(this.astar.isPathAvail == true){\n      this.notificationService.remove();\n      this.astar.generatePath(this.startNode, this.endNode);\n    }else{\n      this.noPath();\n    }\n    this.child.refreshGridworld();\n  }\n\n  shapherds_tour(){\n\n    var color_representation = `\n    <h5>Color in grid represents type of Node/Block. Here are the mapping of each color with it\\'s portrayal. </h5>\n        <div class=\"main_color_rep\" style=\"margin-top:20px;\">\n        <div class=\"start_node\" style=\"height: 50px;\">\n            <div class=\"start\" style=\"float: left; height: 30px; border: 1px solid black; width: 30px; background-color: #ff005f; margin-left: 10px;\"></div>\n            <div class=\"statr_txt\" style=\"float: left; margin-left: 5px;\">Start Node</div>\n\n            <div class=\"start\" style=\"float: left; height: 30px; border: 1px solid black; width: 30px; background-color: green; margin-left: 80px;\"></div>\n            <div class=\"statr_txt\" style=\"float: left; margin-left: 5px;\">Gole Node</div>\n        </div>\n\n\n        <div class=\"start_node\" style=\"height: 50px;\">\n          <div class=\"start\" style=\"float: left; height: 30px; border: 1px solid black; width: 30px; background-color: #000347; margin-left: 10px;\"></div>\n          <div class=\"statr_txt\" style=\"float: left; margin-left: 5px;\">Blocked/Wall Node</div>\n\n          <div class=\"start\" style=\"float: left; height: 30px; border: 1px solid black; width: 30px; background-color: rgb(230, 120, 120); margin-left: 20px;\"></div>\n          <div class=\"statr_txt\" style=\"float: left; margin-left: 5px;\"v>Toll Node</div>\n        </div>\n\n\n        <div class=\"start_node\" style=\"height: 50px;\">\n          <div class=\"start\" style=\"float: left; height: 30px; border: 1px solid black; width: 30px; background-color: white; margin-left: 10px;\"></div>\n          <div class=\"statr_txt\" style=\"float: left; margin-left: 5px;\">Unvisitd Node</div>\n\n          <div class=\"start\" style=\"float: left; height: 30px; border: 1px solid black; width: 30px; background-color: dodgerblue; margin-left: 55px;\"></div>\n          <div class=\"statr_txt\" style=\"float: left; margin-left: 5px;\">Path Node</div>\n        </div>\n\n        <div class=\"start_node\" style=\"height: 50px;\">\n          <div class=\"start\" style=\"float: left; height: 30px; border: 1px solid black; width: 30px; background-color: #ffd300; margin-left: 10px;\"></div>\n          <div class=\"start\" style=\"float: left; height: 30px; border: 1px solid black; width: 30px; background-color: #00ffb6; margin-left: 10px;\"></div>\n          <div class=\"start\" style=\"float: left; height: 30px; border: 1px solid black; width: 30px; background-color: #cc00ff; margin-left: 10px;\"></div>\n\n          <div class=\"statr_txt\" style=\"float: left; margin-left: 5px;\">Visited Nodes</div>\n        </div>\n    </div>\n    `;\n\n    this.shepherdService.defaultStepOptions = {\n      scrollTo: true,\n      cancelIcon: {\n        enabled: true\n      }\n    };\n    this.shepherdService.modal = true;\n    this.shepherdService.confirmCancel = false;\n    this.shepherdService.addSteps([\n    {\n      id: 'step0',\n      title: '<h1><strong><code>Algo Visualizer</code></strong></h1>',\n      text: ['<h5><strong>A fun way to visualize algorithms</strong></h5> <h6> Welcome, Let Have a walkthrough of this tool </h6>',\n      // color_representation,\n      '<img src=\"assets/Visualization_Intro.gif\" width=\"100%\" height=\"50%\">'  \n    ],\n      \n      classes: 'example-step-extra-class',\n      buttons: [\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Skip',\n          type: 'cancel'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Next',\n          type: 'next'\n        }\n      ]\n    },\n    {\n      id: 'step1',\n      text: '<h6> Click on this <code>Algo Visualizer</code>, to get the walkthrough tutorial anytime </h6>',\n      attachTo: {\n        element: '.navhome'\n      },\n      classes: 'example-step-extra-class',\n      buttons: [\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Skip',\n          type: 'cancel'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Back',\n          type: 'back'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Next',\n          type: 'next'\n        }\n      ]\n    },\n    {\n      id: 'step2',\n      text: ['<h6>Use these navbar dropdowns and options to select algorithms, grid size, create patterns/mazes and many more </h6>'],\n      title: '<h3><strong><code>Algorithms and Options</code></strong></h3>',\n      attachTo: {\n        element: '.navbar-nav'\n        // on: 'bottom'\n      },\n      classes: 'example-step-extra-class',\n      buttons: [\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Skip',\n          type: 'cancel'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Back',\n          type: 'back'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Next',\n          type: 'next'\n        }\n      ]\n    },\n    {\n      id: 'step3',\n      text: ['<h6>Use these buttons to visualize algorithm, clear visualization and reset/remove grid blocks</h6>'],\n      title: '<h3><strong><code>Visualiztion Buttons</code></strong></h3>',\n      attachTo: {\n        element: '.btn_navbar'\n      },\n      classes: 'example-step-extra-class',\n      buttons: [\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Skip',\n          type: 'cancel'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Back',\n          type: 'back'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Next',\n          type: 'next'\n        }\n      ]\n    },\n    {\n      id: 'step4',\n      text: [color_representation],\n      title: '<h3><strong><code>Colors and It\\'s <br> Representations</code></strong></h3>',\n\n      classes: 'example-step-extra-class',\n      buttons: [\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Skip',\n          type: 'cancel'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Back',\n          type: 'back'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Next',\n          type: 'next'\n        }\n      ]\n    },\n    {\n      id: 'step5',\n      text: [`<h5>Left click on cell to to create blocked node and right click to crate toll nodes.<h5> \n              <h6>Walls or Blocked nodes are impssible to pass through, \n              therfore path between start and gole node can not pass through them. \n              <div style=\"margin-top:8px; margin-bottom:8px\">\n                Unlike Wall nodes, Toll nodes allows path to pass through them,\n                but it a charge extra cost for permission to use a particular node.\n              </div>\n                Cost of toll node can be set under Options dropdown menu in navbar. \n                Five is selected as default cost for toll node. \n                change toll weight before creating toll block in grid to reflect thoes changes in for toll. \n               </h6> \n              <img src=\"assets/toll_block.gif\" width=\"80%\" height=\"40%\">`],\n      title: '<h3><strong><code>Wall and Toll Blocks</code></strong></h3>',\n\n      classes: 'example-step-extra-class',\n      buttons: [\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Skip',\n          type: 'cancel'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Back',\n          type: 'back'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Next',\n          type: 'next'\n        }\n      ]\n    },\n    {\n      id: 'step6',\n      text: ['<div style=\"margin-bottom:20px;\"><h5>Left click on Start or Goal cells and drag to move them and see the instant path change between them. </h5></div> <img src=\"assets/drag_drop.gif\" width=\"100%\" height=\"50%\">'\n            ],\n      title: '<h3><strong><code>Drag and Drop</code></strong></h3>',\n\n      classes: 'example-step-extra-class',\n      buttons: [\n        {\n          classes: 'shepherd-button-primary',\n          text: 'Back',\n          type: 'back'\n        },\n        {\n          classes: 'shepherd-button-primary',\n          text: 'End',\n          type: 'cancel'\n        }\n      ]\n    }\n  \n  \n  ]);\n  }\n}\n","<div class=\"main_component\">\n\n    <div class=\"walkthrough-overlay\" *ngIf=\"isWalkthrough\"></div>\n    <app-walkthrouh-tutorial class=\"app-walkthrouh-tutorial\" [walkthrough_isShow] = \"isWalkthrough\" (reset_tutorial)=\"resetWalkthrough($event)\" ></app-walkthrouh-tutorial>\n\n    <app-nav-bar (information)=\"infoFromNav($event)\" (reset)=\"resetEverything($event)\" (is_touch_toll)=\"changeTouchSetting($event)\"  (grid_size)=\"ChangeGridSize($event)\" (weight_values)=\"changeWeightValues($event)\" (mazesAndPatterns)=\"change_mazes_pattern($event)\" style=\"position:absolute\"></app-nav-bar>\n    \n    <div class=\"main-window\" style=\"z-index:-20;\">\n        <div class=\"grid\" style=\"margin-top: 100px;\" >\n            <app-gridworld #grid [toll]=\"toll_weight\" [is_touch_toll]=\"is_touch_toll\" [cells] = \"cells\" [inProcess] = \"inProcess\"  (iswallClicked)=\"oniswallClicked($event)\" (dragged)=\"startOrEndDragged($event)\"   disable></app-gridworld>\n        </div>\n    </div>\n</div>\n\n<div class=\"btn_navbar\"></div>\n\n<simple-notifications [options]=\"options\"></simple-notifications>\n<div class=\"footer\">\n    <div class=\"footer_info\">\n\n    </div>\n</div>\n\n","import { Cell } from \"../models/cell\";\nimport { NavInfo } from \"../models/navInfo\";\nimport { AlgoHelper } from \"./algo-helper\";\n\nexport class DFS{\n\n    gridcells:Cell[][] = [];\n    visited:any[] = [];\n    isPathAvail:boolean = false;\n    navigation!:NavInfo;\n\n    start_mid:number[] =[];\n    end_mid:number[] =[];\n\n    constructor(){ \n    }\n\n    runDFS(cells:Cell[][], start:number[], end:number[], navinformation:NavInfo){\n        this.gridcells = cells;\n        this.navigation = navinformation;\n        // this.isPathAvail = this.DFS_Path(start, end);   \n        \n        if(this.navigation.allowBidirection){\n            this.start_mid = [];\n            this.end_mid = [];\n\n            this.isPathAvail = this.DFS_Bidirection_Path(start, end);\n        }else{\n            this.isPathAvail = this.DFS_Path(start, end);\n        }\n\n\n    }\n\n    // generatePath(start:number[], end:number[]){\n    //     // var path = [];\n\n    //     // var prev = this.gridcells[end[0]][end[1]].prev;\n    //     // while(!(prev[0]==start[0] && prev[1]==start[1])){\n    //     //     path.push(prev);\n    //     //     this.gridcells[prev[0]][prev[1]].vertex_status = 'path';\n    //     //     prev = this.gridcells[prev[0]][prev[1]].prev;\n    //     // }\n    //     // return path;\n\n    //     var path = [];\n\n    //     if(this.navigation.allowBidirection){            \n    //         var prev = this.start_mid;\n    //         while(!(prev[0]==start[0] && prev[1]==start[1])){\n    //             path.push(prev);\n    //             this.gridcells[prev[0]][prev[1]].vertex_status = 'path';\n    //             prev = this.gridcells[prev[0]][prev[1]].prev;\n    //         }\n\n    //         prev = this.end_mid;\n    //         while(!(prev[0]==end[0] && prev[1]==end[1])){\n    //             path.push(prev);\n    //             this.gridcells[prev[0]][prev[1]].vertex_status = 'path';\n    //             prev = this.gridcells[prev[0]][prev[1]].prev;\n    //         }\n    //     }else{\n    //         var prev = this.gridcells[end[0]][end[1]].prev;\n    //         while(!(prev[0]==start[0] && prev[1]==start[1])){\n    //             path.push(prev);\n    //             this.gridcells[prev[0]][prev[1]].vertex_status = 'path';\n    //             prev = this.gridcells[prev[0]][prev[1]].prev;\n    //         }\n    //     }\n    //     return path;\n    // }\n\n    generatePath(start:number[], end:number[]){\n        if(this.navigation.allowBidirection){\n            return AlgoHelper.generateBidirectionPath(start, end, this.gridcells, this.start_mid, this.end_mid);\n        }else{\n            return AlgoHelper.generatePath(start, end, this.gridcells);\n        }\n    }\n\n    DFS_Path(start:number[], end:number[]){\n        var q = [];\n        this.visited = [];\n        q.push(start);\n        while(q.length!= 0){\n            var current = q.pop();\n\n            if(current){\n                if(this.gridcells[current[0]][current[1]].status == 'end'){\n                    return true;\n                }\n                this.gridcells[current[0]][current[1]].vertex_status = 'current';\n                if(this.navigation.allowDiagonals){\n                    var neighbors = AlgoHelper.findAllNeighbors(current[0], current[1],this.gridcells.length,this.gridcells[0].length);\n                }else{\n                    var neighbors = AlgoHelper.findNeighbors(current[0], current[1],this.gridcells.length,this.gridcells[0].length);\n                }\n\n                while(neighbors.length != 0){\n                    var n = neighbors.shift();\n                    if(n){\n                        if(this.gridcells[n[0]][n[1]].vertex_status == 'unvisited' && this.gridcells[n[0]][n[1]].status != 'close'){\n                            this.gridcells[n[0]][n[1]].vertex_status = 'neighbors';                        \n                            q.push(n);\n                            this.gridcells[n[0]][n[1]].prev = current; \n                        }                        \n                    } \n                } \n                this.visited.push(current);\n                this.gridcells[current[0]][current[1]].vertex_status = 'visited'; \n            }else{\n                throw new Error('Current node is undefined');\n            }\n        }\n        return false;\n\n    }\n\n\n    DFS_Bidirection_Path(start:number[], end:number[]){\n        this.visited = [];\n        var q_start = [];\n        q_start.push(start);\n       \n        var q_goal = [];\n        q_goal.push(end);\n\n        while(q_start.length != 0 && q_goal.length != 0){            \n            if(q_start.length != 0){\n                var current = q_start.pop();\n                if(current){\n                    if(this.gridcells[current[0]][current[1]].status == 'end' || this.gridcells[current[0]][current[1]].vertex_status == 'visited_goal'){\n                        return true;\n                    }\n\n                    this.gridcells[current[0]][current[1]].vertex_status = 'current';\n\n                    if(this.navigation.allowDiagonals){\n                        var neighbors = AlgoHelper.findAllNeighbors(current[0], current[1],this.gridcells.length,this.gridcells[0].length);\n                    }else{\n                        var neighbors = AlgoHelper.findNeighbors(current[0], current[1],this.gridcells.length,this.gridcells[0].length);\n                    }\n\n                    while(neighbors.length != 0){\n                        var n = neighbors.shift();\n                        if(n){\n                            if((this.gridcells[n[0]][n[1]].vertex_status == 'unvisited'|| this.gridcells[n[0]][n[1]].vertex_status == 'neighbors_end' || this.gridcells[n[0]][n[1]].vertex_status == 'visited_goal' ) && this.gridcells[n[0]][n[1]].status != 'close'){\n                                if(this.gridcells[n[0]][n[1]].vertex_status == 'visited_goal'){\n\n                                    this.visited.push(current);\n                                    this.gridcells[current[0]][current[1]].vertex_status = 'visited_start';\n\n                                    this.start_mid = current;\n                                    this.end_mid = n;\n\n                                    if(this.gridcells[n[0]][n[1]].status != 'start' && this.gridcells[n[0]][n[1]].status != 'end'){\n                                        this.gridcells[n[0]][n[1]].status = 'mid';\n                                        this.gridcells[n[0]][n[1]].vertex_status='unvisited';\n                                    }\n                                    return true;\n                                }\n                                this.gridcells[n[0]][n[1]].vertex_status = 'neighbors';\n                                q_start.push(n);\n                                this.gridcells[n[0]][n[1]].prev = current; \n                            }                        \n                        } \n                    } \n                    this.visited.push(current);\n                    this.gridcells[current[0]][current[1]].vertex_status = 'visited_start'; \n\n                    // console.log(\"If visited included in current or not \",  this.visited.includes(current));\n                    \n                }\n            }else{\n                throw new Error('Current node is undefined');\n            }            \n            if(q_goal.length != 0){\n                var current = q_goal.pop();\n                if(current){\n                    if(this.gridcells[current[0]][current[1]].status == 'start' ||  this.gridcells[current[0]][current[1]].vertex_status == 'visited_start'){\n                        return true;\n                    }\n                    \n                    this.gridcells[current[0]][current[1]].vertex_status = 'current';\n\n                    if(this.navigation.allowDiagonals){\n                        var neighbors = AlgoHelper.findAllNeighbors(current[0], current[1],this.gridcells.length,this.gridcells[0].length);\n                    }else{\n                        var neighbors = AlgoHelper.findNeighbors(current[0], current[1],this.gridcells.length,this.gridcells[0].length);\n                    }\n\n                    while(neighbors.length != 0){\n                        var n = neighbors.shift();\n                        if(n){\n                            if((this.gridcells[n[0]][n[1]].vertex_status == 'unvisited'|| this.gridcells[n[0]][n[1]].vertex_status == 'neighbors' ||  this.gridcells[n[0]][n[1]].vertex_status == 'visited_start' )&& this.gridcells[n[0]][n[1]].status != 'close'){\n                                if(this.gridcells[n[0]][n[1]].vertex_status == 'visited_start'){\n                                    this.visited.push(current);\n                                    this.gridcells[current[0]][current[1]].vertex_status = 'visited_goal'; \n\n\n                                    this.start_mid = n;\n                                    this.end_mid = current;\n                                    \n                                    if(this.gridcells[n[0]][n[1]].status != 'start' && this.gridcells[n[0]][n[1]].status != 'end'){\n                                        this.gridcells[n[0]][n[1]].status = 'mid';\n                                        this.gridcells[n[0]][n[1]].vertex_status='unvisited';\n                                    }\n                                    \n                                    return true;\n                                }\n                                this.gridcells[n[0]][n[1]].vertex_status = 'neighbors_end';\n                                q_goal.push(n);\n                                this.gridcells[n[0]][n[1]].prev = current; \n                            }                        \n                        } \n                    } \n                    this.visited.push(current);\n                    this.gridcells[current[0]][current[1]].vertex_status = 'visited_goal'; \n                }\n            }else{\n                throw new Error('Current node is undefined');\n            }\n        }\n\n        return false;\n    }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}